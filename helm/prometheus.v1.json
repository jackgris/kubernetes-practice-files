{"name":"prometheus","info":{"first_deployed":"2024-05-10T20:24:29.615032064-03:00","last_deployed":"2024-05-10T20:24:29.615032064-03:00","deleted":"","description":"Install complete","status":"deployed","notes":"The Prometheus server can be accessed via port 80 on the following DNS name from within your cluster:\nprometheus-server.monitoring.svc.cluster.local\n\n\nGet the Prometheus server URL by running these commands in the same shell:\n  export POD_NAME=$(kubectl get pods --namespace monitoring -l \"app.kubernetes.io/name=prometheus,app.kubernetes.io/instance=prometheus\" -o jsonpath=\"{.items[0].metadata.name}\")\n  kubectl --namespace monitoring port-forward $POD_NAME 9090\n\n\nThe Prometheus alertmanager can be accessed via port 9093 on the following DNS name from within your cluster:\nprometheus-alertmanager.monitoring.svc.cluster.local\n\n\nGet the Alertmanager URL by running these commands in the same shell:\n  export POD_NAME=$(kubectl get pods --namespace monitoring -l \"app.kubernetes.io/name=alertmanager,app.kubernetes.io/instance=prometheus\" -o jsonpath=\"{.items[0].metadata.name}\")\n  kubectl --namespace monitoring port-forward $POD_NAME 9093\n#################################################################################\n######   WARNING: Pod Security Policy has been disabled by default since    #####\n######            it deprecated after k8s 1.25+. use                        #####\n######            (index .Values \"prometheus-node-exporter\" \"rbac\"          #####\n###### .          \"pspEnabled\") with (index .Values                         #####\n######            \"prometheus-node-exporter\" \"rbac\" \"pspAnnotations\")       #####\n######            in case you still need it.                                #####\n#################################################################################\n\n\nThe Prometheus PushGateway can be accessed via port 9091 on the following DNS name from within your cluster:\nprometheus-prometheus-pushgateway.monitoring.svc.cluster.local\n\n\nGet the PushGateway URL by running these commands in the same shell:\n  export POD_NAME=$(kubectl get pods --namespace monitoring -l \"app=prometheus-pushgateway,component=pushgateway\" -o jsonpath=\"{.items[0].metadata.name}\")\n  kubectl --namespace monitoring port-forward $POD_NAME 9091\n\nFor more information on running Prometheus, visit:\nhttps://prometheus.io/\n"},"chart":{"metadata":{"name":"prometheus","home":"https://prometheus.io/","sources":["https://github.com/prometheus/alertmanager","https://github.com/prometheus/prometheus","https://github.com/prometheus/pushgateway","https://github.com/prometheus/node_exporter","https://github.com/kubernetes/kube-state-metrics"],"version":"25.20.1","description":"Prometheus is a monitoring system and time series database.","keywords":["monitoring","prometheus"],"maintainers":[{"name":"gianrubio","email":"gianrubio@gmail.com"},{"name":"zanhsieh","email":"zanhsieh@gmail.com"},{"name":"Xtigyro","email":"miroslav.hadzhiev@gmail.com"},{"name":"naseemkullah","email":"naseem@transit.app"},{"name":"zeritti","email":"rootsandtrees@posteo.de"}],"icon":"https://raw.githubusercontent.com/prometheus/prometheus.github.io/master/assets/prometheus_logo-cb55bb5c346.png","apiVersion":"v2","appVersion":"v2.51.2","annotations":{"artifacthub.io/license":"Apache-2.0","artifacthub.io/links":"- name: Chart Source\n  url: https://github.com/prometheus-community/helm-charts\n- name: Upstream Project\n  url: https://github.com/prometheus/prometheus\n"},"kubeVersion":"\u003e=1.19.0-0","dependencies":[{"name":"alertmanager","version":"1.10.*","repository":"https://prometheus-community.github.io/helm-charts","condition":"alertmanager.enabled","enabled":true},{"name":"kube-state-metrics","version":"5.18.*","repository":"https://prometheus-community.github.io/helm-charts","condition":"kube-state-metrics.enabled","enabled":true},{"name":"prometheus-node-exporter","version":"4.32.*","repository":"https://prometheus-community.github.io/helm-charts","condition":"prometheus-node-exporter.enabled","enabled":true},{"name":"prometheus-pushgateway","version":"2.12.*","repository":"https://prometheus-community.github.io/helm-charts","condition":"prometheus-pushgateway.enabled","enabled":true}],"type":"application"},"lock":{"generated":"2024-04-20T09:26:23.517241+03:00","digest":"sha256:c872c94f0e911285f56bbf5e2881bbc3315ef28f844ec4b774b11d5bc2f96453","dependencies":[{"name":"alertmanager","version":"1.10.0","repository":"https://prometheus-community.github.io/helm-charts"},{"name":"kube-state-metrics","version":"5.18.1","repository":"https://prometheus-community.github.io/helm-charts"},{"name":"prometheus-node-exporter","version":"4.32.0","repository":"https://prometheus-community.github.io/helm-charts"},{"name":"prometheus-pushgateway","version":"2.12.0","repository":"https://prometheus-community.github.io/helm-charts"}]},"templates":[{"name":"templates/NOTES.txt","data":""},{"name":"templates/_helpers.tpl","data":""},{"name":"templates/clusterrole.yaml","data":"e3stIGlmIGFuZCAuVmFsdWVzLnJiYWMuY3JlYXRlIChlbXB0eSAuVmFsdWVzLnNlcnZlci51c2VFeGlzdGluZ0NsdXN0ZXJSb2xlTmFtZSkgLX19CmFwaVZlcnNpb246IHt7IHRlbXBsYXRlICJyYmFjLmFwaVZlcnNpb24iIC4gfX0Ka2luZDogQ2x1c3RlclJvbGUKbWV0YWRhdGE6CiAgbGFiZWxzOgogICAge3stIGluY2x1ZGUgInByb21ldGhldXMuc2VydmVyLmxhYmVscyIgLiB8IG5pbmRlbnQgNCB9fQogIG5hbWU6IHt7IGluY2x1ZGUgInByb21ldGhldXMuY2x1c3RlclJvbGVOYW1lIiAuIH19CnJ1bGVzOgp7ey0gaWYgYW5kIC5WYWx1ZXMucG9kU2VjdXJpdHlQb2xpY3kuZW5hYmxlZCAoLkNhcGFiaWxpdGllcy5BUElWZXJzaW9ucy5IYXMgInBvbGljeS92MWJldGExL1BvZFNlY3VyaXR5UG9saWN5IikgfX0KICAtIGFwaUdyb3VwczoKICAgIC0gZXh0ZW5zaW9ucwogICAgcmVzb3VyY2VzOgogICAgLSBwb2RzZWN1cml0eXBvbGljaWVzCiAgICB2ZXJiczoKICAgIC0gdXNlCiAgICByZXNvdXJjZU5hbWVzOgogICAgLSB7eyB0ZW1wbGF0ZSAicHJvbWV0aGV1cy5zZXJ2ZXIuZnVsbG5hbWUiIC4gfX0Ke3stIGVuZCB9fQogIC0gYXBpR3JvdXBzOgogICAgICAtICIiCiAgICByZXNvdXJjZXM6CiAgICAgIC0gbm9kZXMKICAgICAgLSBub2Rlcy9wcm94eQogICAgICAtIG5vZGVzL21ldHJpY3MKICAgICAgLSBzZXJ2aWNlcwogICAgICAtIGVuZHBvaW50cwogICAgICAtIHBvZHMKICAgICAgLSBpbmdyZXNzZXMKICAgICAgLSBjb25maWdtYXBzCiAgICB2ZXJiczoKICAgICAgLSBnZXQKICAgICAgLSBsaXN0CiAgICAgIC0gd2F0Y2gKICAtIGFwaUdyb3VwczoKICAgICAgLSAiZXh0ZW5zaW9ucyIKICAgICAgLSAibmV0d29ya2luZy5rOHMuaW8iCiAgICByZXNvdXJjZXM6CiAgICAgIC0gaW5ncmVzc2VzL3N0YXR1cwogICAgICAtIGluZ3Jlc3NlcwogICAgdmVyYnM6CiAgICAgIC0gZ2V0CiAgICAgIC0gbGlzdAogICAgICAtIHdhdGNoCiAgLSBhcGlHcm91cHM6CiAgICAgIC0gImRpc2NvdmVyeS5rOHMuaW8iCiAgICByZXNvdXJjZXM6CiAgICAgIC0gZW5kcG9pbnRzbGljZXMKICAgIHZlcmJzOgogICAgICAtIGdldAogICAgICAtIGxpc3QKICAgICAgLSB3YXRjaAogIC0gbm9uUmVzb3VyY2VVUkxzOgogICAgICAtICIvbWV0cmljcyIKICAgIHZlcmJzOgogICAgICAtIGdldAp7ey0gZW5kIH19Cg=="},{"name":"templates/clusterrolebinding.yaml","data":"e3stIGlmIGFuZCAuVmFsdWVzLnJiYWMuY3JlYXRlIChlbXB0eSAuVmFsdWVzLnNlcnZlci5uYW1lc3BhY2VzKSAoZW1wdHkgLlZhbHVlcy5zZXJ2ZXIudXNlRXhpc3RpbmdDbHVzdGVyUm9sZU5hbWUpIC19fQphcGlWZXJzaW9uOiB7eyB0ZW1wbGF0ZSAicmJhYy5hcGlWZXJzaW9uIiAuIH19CmtpbmQ6IENsdXN0ZXJSb2xlQmluZGluZwptZXRhZGF0YToKICBsYWJlbHM6CiAgICB7ey0gaW5jbHVkZSAicHJvbWV0aGV1cy5zZXJ2ZXIubGFiZWxzIiAuIHwgbmluZGVudCA0IH19CiAgbmFtZToge3sgaW5jbHVkZSAicHJvbWV0aGV1cy5jbHVzdGVyUm9sZU5hbWUiIC4gfX0Kc3ViamVjdHM6CiAgLSBraW5kOiBTZXJ2aWNlQWNjb3VudAogICAgbmFtZToge3sgdGVtcGxhdGUgInByb21ldGhldXMuc2VydmljZUFjY291bnROYW1lLnNlcnZlciIgLiB9fQogICAgbmFtZXNwYWNlOiB7eyBpbmNsdWRlICJwcm9tZXRoZXVzLm5hbWVzcGFjZSIgLiB9fQpyb2xlUmVmOgogIGFwaUdyb3VwOiByYmFjLmF1dGhvcml6YXRpb24uazhzLmlvCiAga2luZDogQ2x1c3RlclJvbGUKICBuYW1lOiB7eyBpbmNsdWRlICJwcm9tZXRoZXVzLmNsdXN0ZXJSb2xlTmFtZSIgLiB9fQp7ey0gZW5kIH19Cg=="},{"name":"templates/cm.yaml","data":"e3stIGlmIChlbXB0eSAuVmFsdWVzLnNlcnZlci5jb25maWdNYXBPdmVycmlkZU5hbWUpIC19fQphcGlWZXJzaW9uOiB2MQpraW5kOiBDb25maWdNYXAKbWV0YWRhdGE6Cnt7LSB3aXRoIC5WYWx1ZXMuc2VydmVyLmNvbmZpZ01hcEFubm90YXRpb25zIH19CiAgYW5ub3RhdGlvbnM6CiAgICB7ey0gdG9ZYW1sIC4gfCBuaW5kZW50IDQgfX0Ke3stIGVuZCB9fQogIGxhYmVsczoKICAgIHt7LSBpbmNsdWRlICJwcm9tZXRoZXVzLnNlcnZlci5sYWJlbHMiIC4gfCBuaW5kZW50IDQgfX0KICAgIHt7LSB3aXRoIC5WYWx1ZXMuc2VydmVyLmV4dHJhQ29uZmlnbWFwTGFiZWxzIH19CiAgICB7ey0gdG9ZYW1sIC4gfCBuaW5kZW50IDQgfX0KICAgIHt7LSBlbmQgfX0KICBuYW1lOiB7eyB0ZW1wbGF0ZSAicHJvbWV0aGV1cy5zZXJ2ZXIuZnVsbG5hbWUiIC4gfX0KICBuYW1lc3BhY2U6IHt7IGluY2x1ZGUgInByb21ldGhldXMubmFtZXNwYWNlIiAuIH19CmRhdGE6CiAgYWxsb3ctc25pcHBldC1hbm5vdGF0aW9uczogImZhbHNlIgp7ey0gJHJvb3QgOj0gLiAtfX0Ke3stIHJhbmdlICRrZXksICR2YWx1ZSA6PSAuVmFsdWVzLnJ1bGVGaWxlcyB9fQogIHt7ICRrZXkgfX06IHt7LSB0b1lhbWwgJHZhbHVlIHwgaW5kZW50IDIgfX0Ke3stIGVuZCB9fQp7ey0gcmFuZ2UgJGtleSwgJHZhbHVlIDo9IC5WYWx1ZXMuc2VydmVyRmlsZXMgfX0KICB7eyAka2V5IH19OiB8Cnt7LSBpZiBlcSAka2V5ICJwcm9tZXRoZXVzLnltbCIgfX0KICAgIGdsb2JhbDoKe3sgJHJvb3QuVmFsdWVzLnNlcnZlci5nbG9iYWwgfCB0b1lhbWwgfCB0cmltU3VmZml4ICJcbiIgfCBpbmRlbnQgNiB9fQp7ey0gaWYgJHJvb3QuVmFsdWVzLnNlcnZlci5yZW1vdGVXcml0ZSB9fQogICAgcmVtb3RlX3dyaXRlOgp7ey0gaW5jbHVkZSAicHJvbWV0aGV1cy5zZXJ2ZXIucmVtb3RlV3JpdGUiICRyb290IHwgbmluZGVudCA0IH19Cnt7LSBlbmQgfX0Ke3stIGlmICRyb290LlZhbHVlcy5zZXJ2ZXIucmVtb3RlUmVhZCB9fQogICAgcmVtb3RlX3JlYWQ6Cnt7LSBpbmNsdWRlICJwcm9tZXRoZXVzLnNlcnZlci5yZW1vdGVSZWFkIiAkcm9vdCB8IG5pbmRlbnQgNCB9fQp7ey0gZW5kIH19Cnt7LSBpZiBvciAkcm9vdC5WYWx1ZXMuc2VydmVyLnRzZGIgJHJvb3QuVmFsdWVzLnNlcnZlci5leGVtcGxhcnMgfX0KICAgIHN0b3JhZ2U6Cnt7LSBpZiAkcm9vdC5WYWx1ZXMuc2VydmVyLnRzZGIgfX0KICAgICAgdHNkYjoKe3sgJHJvb3QuVmFsdWVzLnNlcnZlci50c2RiIHwgdG9ZYW1sIHwgaW5kZW50IDggfX0Ke3stIGVuZCB9fQp7ey0gaWYgJHJvb3QuVmFsdWVzLnNlcnZlci5leGVtcGxhcnMgfX0KICAgICAgZXhlbXBsYXJzOgp7eyAkcm9vdC5WYWx1ZXMuc2VydmVyLmV4ZW1wbGFycyB8IHRvWWFtbCB8IGluZGVudCA4IH19Cnt7LSBlbmQgfX0Ke3stIGVuZCB9fQp7ey0gaWYgJHJvb3QuVmFsdWVzLnNjcmFwZUNvbmZpZ0ZpbGVzIH19CiAgICBzY3JhcGVfY29uZmlnX2ZpbGVzOgp7eyB0b1lhbWwgJHJvb3QuVmFsdWVzLnNjcmFwZUNvbmZpZ0ZpbGVzIHwgaW5kZW50IDQgfX0Ke3stIGVuZCB9fQp7ey0gZW5kIH19Cnt7LSBpZiBlcSAka2V5ICJhbGVydHMiIH19Cnt7LSBpZiBhbmQgKG5vdCAoZW1wdHkgJHZhbHVlKSkgKGVtcHR5ICR2YWx1ZS5ncm91cHMpIH19CiAgICBncm91cHM6Cnt7LSByYW5nZSAkcnVsZUtleSwgJHJ1bGVWYWx1ZSA6PSAkdmFsdWUgfX0KICAgIC0gbmFtZToge3sgJHJ1bGVLZXkgLX19LnJ1bGVzCiAgICAgIHJ1bGVzOgp7eyAkcnVsZVZhbHVlIHwgdG9ZYW1sIHwgdHJpbVN1ZmZpeCAiXG4iIHwgaW5kZW50IDYgfX0Ke3stIGVuZCB9fQp7ey0gZWxzZSB9fQp7eyB0b1lhbWwgJHZhbHVlIHwgaW5kZW50IDQgfX0Ke3stIGVuZCB9fQp7ey0gZWxzZSB9fQp7eyB0b1lhbWwgJHZhbHVlIHwgZGVmYXVsdCAie30iIHwgaW5kZW50IDQgfX0Ke3stIGVuZCB9fQp7ey0gaWYgZXEgJGtleSAicHJvbWV0aGV1cy55bWwiIC19fQp7ey0gaWYgJHJvb3QuVmFsdWVzLmV4dHJhU2NyYXBlQ29uZmlncyB9fQp7eyB0cGwgJHJvb3QuVmFsdWVzLmV4dHJhU2NyYXBlQ29uZmlncyAkcm9vdCB8IGluZGVudCA0IH19Cnt7LSBlbmQgLX19Cnt7LSBpZiBvciAoJHJvb3QuVmFsdWVzLmFsZXJ0bWFuYWdlci5lbmFibGVkKSAoJHJvb3QuVmFsdWVzLnNlcnZlci5hbGVydG1hbmFnZXJzKSB9fQogICAgYWxlcnRpbmc6Cnt7LSBpZiAkcm9vdC5WYWx1ZXMuYWxlcnRSZWxhYmVsQ29uZmlncyB9fQp7eyAkcm9vdC5WYWx1ZXMuYWxlcnRSZWxhYmVsQ29uZmlncyB8IHRvWWFtbCAgfCB0cmltU3VmZml4ICJcbiIgfCBpbmRlbnQgNiB9fQp7ey0gZW5kIH19CiAgICAgIGFsZXJ0bWFuYWdlcnM6Cnt7LSBpZiAkcm9vdC5WYWx1ZXMuc2VydmVyLmFsZXJ0bWFuYWdlcnMgfX0Ke3sgdG9ZYW1sICRyb290LlZhbHVlcy5zZXJ2ZXIuYWxlcnRtYW5hZ2VycyB8IGluZGVudCA4IH19Cnt7LSBlbHNlIH19CiAgICAgIC0ga3ViZXJuZXRlc19zZF9jb25maWdzOgogICAgICAgICAgLSByb2xlOiBwb2QKICAgICAgICB0bHNfY29uZmlnOgogICAgICAgICAgY2FfZmlsZTogL3Zhci9ydW4vc2VjcmV0cy9rdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L2NhLmNydAogICAgICAgIGJlYXJlcl90b2tlbl9maWxlOiAvdmFyL3J1bi9zZWNyZXRzL2t1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvdG9rZW4KICAgICAgICB7ey0gaWYgJHJvb3QuVmFsdWVzLmFsZXJ0bWFuYWdlci5wcmVmaXhVUkwgfX0KICAgICAgICBwYXRoX3ByZWZpeDoge3sgJHJvb3QuVmFsdWVzLmFsZXJ0bWFuYWdlci5wcmVmaXhVUkwgfX0KICAgICAgICB7ey0gZW5kIH19CiAgICAgICAgcmVsYWJlbF9jb25maWdzOgogICAgICAgIC0gc291cmNlX2xhYmVsczogW19fbWV0YV9rdWJlcm5ldGVzX25hbWVzcGFjZV0KICAgICAgICAgIHJlZ2V4OiB7eyAkcm9vdC5SZWxlYXNlLk5hbWVzcGFjZSB9fQogICAgICAgICAgYWN0aW9uOiBrZWVwCiAgICAgICAgLSBzb3VyY2VfbGFiZWxzOiBbX19tZXRhX2t1YmVybmV0ZXNfcG9kX2xhYmVsX2FwcF9rdWJlcm5ldGVzX2lvX2luc3RhbmNlXQogICAgICAgICAgcmVnZXg6IHt7ICRyb290LlJlbGVhc2UuTmFtZSB9fQogICAgICAgICAgYWN0aW9uOiBrZWVwCiAgICAgICAgLSBzb3VyY2VfbGFiZWxzOiBbX19tZXRhX2t1YmVybmV0ZXNfcG9kX2xhYmVsX2FwcF9rdWJlcm5ldGVzX2lvX25hbWVdCiAgICAgICAgICByZWdleDoge3sgZGVmYXVsdCAiYWxlcnRtYW5hZ2VyIiAkcm9vdC5WYWx1ZXMuYWxlcnRtYW5hZ2VyLm5hbWVPdmVycmlkZSB8IHRydW5jIDYzIHwgdHJpbVN1ZmZpeCAiLSIgfX0KICAgICAgICAgIGFjdGlvbjoga2VlcAogICAgICAgIC0gc291cmNlX2xhYmVsczogW19fbWV0YV9rdWJlcm5ldGVzX3BvZF9jb250YWluZXJfcG9ydF9udW1iZXJdCiAgICAgICAgICByZWdleDogIjkwOTMiCiAgICAgICAgICBhY3Rpb246IGtlZXAKe3stIGVuZCAtfX0Ke3stIGVuZCAtfX0Ke3stIGVuZCAtfX0Ke3stIGVuZCAtfX0Ke3stIGVuZCAtfX0K"},{"name":"templates/deploy.yaml","data":""},{"name":"templates/extra-manifests.yaml","data":"e3sgcmFuZ2UgLlZhbHVlcy5leHRyYU1hbmlmZXN0cyB9fQotLS0Ke3sgdHBsIC4gJCB9fQp7eyBlbmQgfX0K"},{"name":"templates/headless-svc.yaml","data":"e3stIGlmIC5WYWx1ZXMuc2VydmVyLnN0YXRlZnVsU2V0LmVuYWJsZWQgLX19CmFwaVZlcnNpb246IHYxCmtpbmQ6IFNlcnZpY2UKbWV0YWRhdGE6Cnt7LSBpZiAuVmFsdWVzLnNlcnZlci5zdGF0ZWZ1bFNldC5oZWFkbGVzcy5hbm5vdGF0aW9ucyB9fQogIGFubm90YXRpb25zOgp7eyB0b1lhbWwgLlZhbHVlcy5zZXJ2ZXIuc3RhdGVmdWxTZXQuaGVhZGxlc3MuYW5ub3RhdGlvbnMgfCBpbmRlbnQgNCB9fQp7ey0gZW5kIH19CiAgbGFiZWxzOgogICAge3stIGluY2x1ZGUgInByb21ldGhldXMuc2VydmVyLmxhYmVscyIgLiB8IG5pbmRlbnQgNCB9fQp7ey0gaWYgLlZhbHVlcy5zZXJ2ZXIuc3RhdGVmdWxTZXQuaGVhZGxlc3MubGFiZWxzIH19Cnt7IHRvWWFtbCAuVmFsdWVzLnNlcnZlci5zdGF0ZWZ1bFNldC5oZWFkbGVzcy5sYWJlbHMgfCBpbmRlbnQgNCB9fQp7ey0gZW5kIH19CiAgbmFtZToge3sgdGVtcGxhdGUgInByb21ldGhldXMuc2VydmVyLmZ1bGxuYW1lIiAuIH19LWhlYWRsZXNzCiAgbmFtZXNwYWNlOiB7eyBpbmNsdWRlICJwcm9tZXRoZXVzLm5hbWVzcGFjZSIgLiB9fQpzcGVjOgogIGNsdXN0ZXJJUDogTm9uZQogIHBvcnRzOgogICAgLSBuYW1lOiBodHRwCiAgICAgIHBvcnQ6IHt7IC5WYWx1ZXMuc2VydmVyLnN0YXRlZnVsU2V0LmhlYWRsZXNzLnNlcnZpY2VQb3J0IH19CiAgICAgIHByb3RvY29sOiBUQ1AKICAgICAgdGFyZ2V0UG9ydDogOTA5MAogICAge3stIGlmIC5WYWx1ZXMuc2VydmVyLnN0YXRlZnVsU2V0LmhlYWRsZXNzLmdSUEMuZW5hYmxlZCB9fQogICAgLSBuYW1lOiBncnBjCiAgICAgIHBvcnQ6IHt7IC5WYWx1ZXMuc2VydmVyLnN0YXRlZnVsU2V0LmhlYWRsZXNzLmdSUEMuc2VydmljZVBvcnQgfX0KICAgICAgcHJvdG9jb2w6IFRDUAogICAgICB0YXJnZXRQb3J0OiAxMDkwMQogICAge3stIGlmIC5WYWx1ZXMuc2VydmVyLnN0YXRlZnVsU2V0LmhlYWRsZXNzLmdSUEMubm9kZVBvcnQgfX0KICAgICAgbm9kZVBvcnQ6IHt7IC5WYWx1ZXMuc2VydmVyLnN0YXRlZnVsU2V0LmhlYWRsZXNzLmdSUEMubm9kZVBvcnQgfX0KICAgIHt7LSBlbmQgfX0KICAgIHt7LSBlbmQgfX0KCiAgc2VsZWN0b3I6CiAgICB7ey0gaW5jbHVkZSAicHJvbWV0aGV1cy5zZXJ2ZXIubWF0Y2hMYWJlbHMiIC4gfCBuaW5kZW50IDQgfX0Ke3stIGVuZCAtfX0K"},{"name":"templates/ingress.yaml","data":"e3stIGlmIC5WYWx1ZXMuc2VydmVyLmluZ3Jlc3MuZW5hYmxlZCAtfX0Ke3stICRpbmdyZXNzQXBpSXNTdGFibGUgOj0gZXEgKGluY2x1ZGUgImluZ3Jlc3MuaXNTdGFibGUiIC4pICJ0cnVlIiAtfX0Ke3stICRpbmdyZXNzU3VwcG9ydHNJbmdyZXNzQ2xhc3NOYW1lIDo9IGVxIChpbmNsdWRlICJpbmdyZXNzLnN1cHBvcnRzSW5ncmVzc0NsYXNzTmFtZSIgLikgInRydWUiIC19fQp7ey0gJGluZ3Jlc3NTdXBwb3J0c1BhdGhUeXBlIDo9IGVxIChpbmNsdWRlICJpbmdyZXNzLnN1cHBvcnRzUGF0aFR5cGUiIC4pICJ0cnVlIiAtfX0Ke3stICRyZWxlYXNlTmFtZSA6PSAuUmVsZWFzZS5OYW1lIC19fQp7ey0gJHNlcnZpY2VOYW1lIDo9IGluY2x1ZGUgInByb21ldGhldXMuc2VydmVyLmZ1bGxuYW1lIiAuIH19Cnt7LSAkc2VydmljZVBvcnQgOj0gLlZhbHVlcy5zZXJ2ZXIuaW5ncmVzcy5zZXJ2aWNlUG9ydCB8IGRlZmF1bHQgLlZhbHVlcy5zZXJ2ZXIuc2VydmljZS5zZXJ2aWNlUG9ydCAtfX0Ke3stICRpbmdyZXNzUGF0aCA6PSAuVmFsdWVzLnNlcnZlci5pbmdyZXNzLnBhdGggLX19Cnt7LSAkaW5ncmVzc1BhdGhUeXBlIDo9IC5WYWx1ZXMuc2VydmVyLmluZ3Jlc3MucGF0aFR5cGUgLX19Cnt7LSAkZXh0cmFQYXRocyA6PSAuVmFsdWVzLnNlcnZlci5pbmdyZXNzLmV4dHJhUGF0aHMgLX19CmFwaVZlcnNpb246IHt7IHRlbXBsYXRlICJpbmdyZXNzLmFwaVZlcnNpb24iIC4gfX0Ka2luZDogSW5ncmVzcwptZXRhZGF0YToKe3stIGlmIC5WYWx1ZXMuc2VydmVyLmluZ3Jlc3MuYW5ub3RhdGlvbnMgfX0KICBhbm5vdGF0aW9uczoKe3sgdG9ZYW1sIC5WYWx1ZXMuc2VydmVyLmluZ3Jlc3MuYW5ub3RhdGlvbnMgfCBpbmRlbnQgNCB9fQp7ey0gZW5kIH19CiAgbGFiZWxzOgogICAge3stIGluY2x1ZGUgInByb21ldGhldXMuc2VydmVyLmxhYmVscyIgLiB8IG5pbmRlbnQgNCB9fQp7ey0gcmFuZ2UgJGtleSwgJHZhbHVlIDo9IC5WYWx1ZXMuc2VydmVyLmluZ3Jlc3MuZXh0cmFMYWJlbHMgfX0KICAgIHt7ICRrZXkgfX06IHt7ICR2YWx1ZSB9fQp7ey0gZW5kIH19CiAgbmFtZToge3sgdGVtcGxhdGUgInByb21ldGhldXMuc2VydmVyLmZ1bGxuYW1lIiAuIH19CiAgbmFtZXNwYWNlOiB7eyBpbmNsdWRlICJwcm9tZXRoZXVzLm5hbWVzcGFjZSIgLiB9fQpzcGVjOgogIHt7LSBpZiBhbmQgJGluZ3Jlc3NTdXBwb3J0c0luZ3Jlc3NDbGFzc05hbWUgLlZhbHVlcy5zZXJ2ZXIuaW5ncmVzcy5pbmdyZXNzQ2xhc3NOYW1lIH19CiAgaW5ncmVzc0NsYXNzTmFtZToge3sgLlZhbHVlcy5zZXJ2ZXIuaW5ncmVzcy5pbmdyZXNzQ2xhc3NOYW1lIH19CiAge3stIGVuZCB9fQogIHJ1bGVzOgogIHt7LSByYW5nZSAuVmFsdWVzLnNlcnZlci5pbmdyZXNzLmhvc3RzIH19CiAgICB7ey0gJHVybCA6PSBzcGxpdExpc3QgIi8iIC4gfX0KICAgIC0gaG9zdDoge3sgZmlyc3QgJHVybCB9fQogICAgICBodHRwOgogICAgICAgIHBhdGhzOgp7eyBpZiAkZXh0cmFQYXRocyB9fQp7eyB0b1lhbWwgJGV4dHJhUGF0aHMgfCBpbmRlbnQgMTAgfX0Ke3stIGVuZCB9fQogICAgICAgICAgLSBwYXRoOiB7eyAkaW5ncmVzc1BhdGggfX0KICAgICAgICAgICAge3stIGlmICRpbmdyZXNzU3VwcG9ydHNQYXRoVHlwZSB9fQogICAgICAgICAgICBwYXRoVHlwZToge3sgJGluZ3Jlc3NQYXRoVHlwZSB9fQogICAgICAgICAgICB7ey0gZW5kIH19CiAgICAgICAgICAgIGJhY2tlbmQ6CiAgICAgICAgICAgICAge3stIGlmICRpbmdyZXNzQXBpSXNTdGFibGUgfX0KICAgICAgICAgICAgICBzZXJ2aWNlOgogICAgICAgICAgICAgICAgbmFtZToge3sgJHNlcnZpY2VOYW1lIH19CiAgICAgICAgICAgICAgICBwb3J0OgogICAgICAgICAgICAgICAgICBudW1iZXI6IHt7ICRzZXJ2aWNlUG9ydCB9fQogICAgICAgICAgICAgIHt7LSBlbHNlIH19CiAgICAgICAgICAgICAgc2VydmljZU5hbWU6IHt7ICRzZXJ2aWNlTmFtZSB9fQogICAgICAgICAgICAgIHNlcnZpY2VQb3J0OiB7eyAkc2VydmljZVBvcnQgfX0KICAgICAgICAgICAgICB7ey0gZW5kIH19CiAge3stIGVuZCAtfX0Ke3stIGlmIC5WYWx1ZXMuc2VydmVyLmluZ3Jlc3MudGxzIH19CiAgdGxzOgp7eyB0b1lhbWwgLlZhbHVlcy5zZXJ2ZXIuaW5ncmVzcy50bHMgfCBpbmRlbnQgNCB9fQogIHt7LSBlbmQgLX19Cnt7LSBlbmQgLX19Cg=="},{"name":"templates/network-policy.yaml","data":"e3stIGlmIC5WYWx1ZXMubmV0d29ya1BvbGljeS5lbmFibGVkIH19CmFwaVZlcnNpb246IHt7IHRlbXBsYXRlICJwcm9tZXRoZXVzLm5ldHdvcmtQb2xpY3kuYXBpVmVyc2lvbiIgLiB9fQpraW5kOiBOZXR3b3JrUG9saWN5Cm1ldGFkYXRhOgogIG5hbWU6IHt7IHRlbXBsYXRlICJwcm9tZXRoZXVzLnNlcnZlci5mdWxsbmFtZSIgLiB9fQogIG5hbWVzcGFjZToge3sgaW5jbHVkZSAicHJvbWV0aGV1cy5uYW1lc3BhY2UiIC4gfX0KICBsYWJlbHM6CiAgICB7ey0gaW5jbHVkZSAicHJvbWV0aGV1cy5zZXJ2ZXIubGFiZWxzIiAuIHwgbmluZGVudCA0IH19CnNwZWM6CiAgcG9kU2VsZWN0b3I6CiAgICBtYXRjaExhYmVsczoKICAgICAge3stIGluY2x1ZGUgInByb21ldGhldXMuc2VydmVyLm1hdGNoTGFiZWxzIiAuIHwgbmluZGVudCA2IH19CiAgaW5ncmVzczoKICAgIC0gcG9ydHM6CiAgICAgIC0gcG9ydDogOTA5MAp7ey0gZW5kIH19Cg=="},{"name":"templates/pdb.yaml","data":"e3stIGlmIC5WYWx1ZXMuc2VydmVyLnBvZERpc3J1cHRpb25CdWRnZXQuZW5hYmxlZCB9fQp7ey0gJHBkYlNwZWMgOj0gb21pdCAuVmFsdWVzLnNlcnZlci5wb2REaXNydXB0aW9uQnVkZ2V0ICJlbmFibGVkIiB9fQphcGlWZXJzaW9uOiB7eyB0ZW1wbGF0ZSAicHJvbWV0aGV1cy5wb2REaXNydXB0aW9uQnVkZ2V0LmFwaVZlcnNpb24iIC4gfX0Ka2luZDogUG9kRGlzcnVwdGlvbkJ1ZGdldAptZXRhZGF0YToKICBuYW1lOiB7eyB0ZW1wbGF0ZSAicHJvbWV0aGV1cy5zZXJ2ZXIuZnVsbG5hbWUiIC4gfX0KICBuYW1lc3BhY2U6IHt7IGluY2x1ZGUgInByb21ldGhldXMubmFtZXNwYWNlIiAuIH19CiAgbGFiZWxzOgogICAge3stIGluY2x1ZGUgInByb21ldGhldXMuc2VydmVyLmxhYmVscyIgLiB8IG5pbmRlbnQgNCB9fQpzcGVjOgogIHNlbGVjdG9yOgogICAgbWF0Y2hMYWJlbHM6CiAgICAgIHt7LSBpbmNsdWRlICJwcm9tZXRoZXVzLnNlcnZlci5tYXRjaExhYmVscyIgLiB8IG5pbmRlbnQgNiB9fQogIHt7LSB0b1lhbWwgJHBkYlNwZWMgfCBuaW5kZW50IDIgfX0Ke3stIGVuZCB9fQo="},{"name":"templates/psp.yaml","data":"e3stIGlmIGFuZCAuVmFsdWVzLnJiYWMuY3JlYXRlIC5WYWx1ZXMucG9kU2VjdXJpdHlQb2xpY3kuZW5hYmxlZCB9fQp7ey0gaWYgLkNhcGFiaWxpdGllcy5BUElWZXJzaW9ucy5IYXMgInBvbGljeS92MWJldGExL1BvZFNlY3VyaXR5UG9saWN5IiB9fQphcGlWZXJzaW9uOiBwb2xpY3kvdjFiZXRhMQpraW5kOiBQb2RTZWN1cml0eVBvbGljeQptZXRhZGF0YToKICBuYW1lOiB7eyB0ZW1wbGF0ZSAicHJvbWV0aGV1cy5zZXJ2ZXIuZnVsbG5hbWUiIC4gfX0KICBsYWJlbHM6CiAgICB7ey0gaW5jbHVkZSAicHJvbWV0aGV1cy5zZXJ2ZXIubGFiZWxzIiAuIHwgbmluZGVudCA0IH19CiAge3stIHdpdGggLlZhbHVlcy5zZXJ2ZXIucG9kU2VjdXJpdHlQb2xpY3kuYW5ub3RhdGlvbnMgfX0KICBhbm5vdGF0aW9uczoKICAgIHt7LSB0b1lhbWwgLiB8IG5pbmRlbnQgNCB9fQogIHt7LSBlbmQgfX0Kc3BlYzoKICBwcml2aWxlZ2VkOiBmYWxzZQogIGFsbG93UHJpdmlsZWdlRXNjYWxhdGlvbjogZmFsc2UKICBhbGxvd2VkQ2FwYWJpbGl0aWVzOgogICAgLSAnQ0hPV04nCiAgdm9sdW1lczoKICAgIC0gJ2NvbmZpZ01hcCcKICAgIC0gJ3BlcnNpc3RlbnRWb2x1bWVDbGFpbScKICAgIC0gJ2VtcHR5RGlyJwogICAgLSAnc2VjcmV0JwogICAgLSAnaG9zdFBhdGgnCiAgYWxsb3dlZEhvc3RQYXRoczoKICAgIC0gcGF0aFByZWZpeDogL2V0YwogICAgICByZWFkT25seTogdHJ1ZQogICAgLSBwYXRoUHJlZml4OiB7eyAuVmFsdWVzLnNlcnZlci5wZXJzaXN0ZW50Vm9sdW1lLm1vdW50UGF0aCB9fQogIHt7LSByYW5nZSAuVmFsdWVzLnNlcnZlci5leHRyYUhvc3RQYXRoTW91bnRzIH19CiAgICAtIHBhdGhQcmVmaXg6IHt7IC5ob3N0UGF0aCB9fQogICAgICByZWFkT25seToge3sgLnJlYWRPbmx5IH19CiAge3stIGVuZCB9fQogIGhvc3ROZXR3b3JrOiBmYWxzZQogIGhvc3RQSUQ6IGZhbHNlCiAgaG9zdElQQzogZmFsc2UKICBydW5Bc1VzZXI6CiAgICBydWxlOiAnUnVuQXNBbnknCiAgc2VMaW51eDoKICAgIHJ1bGU6ICdSdW5Bc0FueScKICBzdXBwbGVtZW50YWxHcm91cHM6CiAgICBydWxlOiAnTXVzdFJ1bkFzJwogICAgcmFuZ2VzOgogICAgICAjIEZvcmJpZCBhZGRpbmcgdGhlIHJvb3QgZ3JvdXAuCiAgICAgIC0gbWluOiAxCiAgICAgICAgbWF4OiA2NTUzNQogIGZzR3JvdXA6CiAgICBydWxlOiAnTXVzdFJ1bkFzJwogICAgcmFuZ2VzOgogICAgICAjIEZvcmJpZCBhZGRpbmcgdGhlIHJvb3QgZ3JvdXAuCiAgICAgIC0gbWluOiAxCiAgICAgICAgbWF4OiA2NTUzNQogIHJlYWRPbmx5Um9vdEZpbGVzeXN0ZW06IGZhbHNlCnt7LSBlbmQgfX0Ke3stIGVuZCB9fQo="},{"name":"templates/pvc.yaml","data":"e3stIGlmIG5vdCAuVmFsdWVzLnNlcnZlci5zdGF0ZWZ1bFNldC5lbmFibGVkIC19fQp7ey0gaWYgLlZhbHVlcy5zZXJ2ZXIucGVyc2lzdGVudFZvbHVtZS5lbmFibGVkIC19fQp7ey0gaWYgbm90IC5WYWx1ZXMuc2VydmVyLnBlcnNpc3RlbnRWb2x1bWUuZXhpc3RpbmdDbGFpbSAtfX0KYXBpVmVyc2lvbjogdjEKa2luZDogUGVyc2lzdGVudFZvbHVtZUNsYWltCm1ldGFkYXRhOgogIHt7LSBpZiAuVmFsdWVzLnNlcnZlci5wZXJzaXN0ZW50Vm9sdW1lLmFubm90YXRpb25zIH19CiAgYW5ub3RhdGlvbnM6Cnt7IHRvWWFtbCAuVmFsdWVzLnNlcnZlci5wZXJzaXN0ZW50Vm9sdW1lLmFubm90YXRpb25zIHwgaW5kZW50IDQgfX0KICB7ey0gZW5kIH19CiAgbGFiZWxzOgogICAge3stIGluY2x1ZGUgInByb21ldGhldXMuc2VydmVyLmxhYmVscyIgLiB8IG5pbmRlbnQgNCB9fQogICAge3stIHdpdGggLlZhbHVlcy5zZXJ2ZXIucGVyc2lzdGVudFZvbHVtZS5sYWJlbHMgfX0KICAgICAgIHt7LSB0b1lhbWwgLiB8IG5pbmRlbnQgNCB9fQogICAge3stIGVuZCB9fQogIG5hbWU6IHt7IHRlbXBsYXRlICJwcm9tZXRoZXVzLnNlcnZlci5mdWxsbmFtZSIgLiB9fQogIG5hbWVzcGFjZToge3sgaW5jbHVkZSAicHJvbWV0aGV1cy5uYW1lc3BhY2UiIC4gfX0Kc3BlYzoKICBhY2Nlc3NNb2RlczoKe3sgdG9ZYW1sIC5WYWx1ZXMuc2VydmVyLnBlcnNpc3RlbnRWb2x1bWUuYWNjZXNzTW9kZXMgfCBpbmRlbnQgNCB9fQp7ey0gaWYgLlZhbHVlcy5zZXJ2ZXIucGVyc2lzdGVudFZvbHVtZS5zdG9yYWdlQ2xhc3MgfX0Ke3stIGlmIChlcSAiLSIgLlZhbHVlcy5zZXJ2ZXIucGVyc2lzdGVudFZvbHVtZS5zdG9yYWdlQ2xhc3MpIH19CiAgc3RvcmFnZUNsYXNzTmFtZTogIiIKe3stIGVsc2UgfX0KICBzdG9yYWdlQ2xhc3NOYW1lOiAie3sgLlZhbHVlcy5zZXJ2ZXIucGVyc2lzdGVudFZvbHVtZS5zdG9yYWdlQ2xhc3MgfX0iCnt7LSBlbmQgfX0Ke3stIGVuZCB9fQp7ey0gaWYgLlZhbHVlcy5zZXJ2ZXIucGVyc2lzdGVudFZvbHVtZS52b2x1bWVCaW5kaW5nTW9kZSB9fQogIHZvbHVtZUJpbmRpbmdNb2RlOiAie3sgLlZhbHVlcy5zZXJ2ZXIucGVyc2lzdGVudFZvbHVtZS52b2x1bWVCaW5kaW5nTW9kZSB9fSIKe3stIGVuZCB9fQogIHJlc291cmNlczoKICAgIHJlcXVlc3RzOgogICAgICBzdG9yYWdlOiAie3sgLlZhbHVlcy5zZXJ2ZXIucGVyc2lzdGVudFZvbHVtZS5zaXplIH19Igp7ey0gaWYgLlZhbHVlcy5zZXJ2ZXIucGVyc2lzdGVudFZvbHVtZS5zZWxlY3RvciB9fQogIHNlbGVjdG9yOgogIHt7LSB0b1lhbWwgLlZhbHVlcy5zZXJ2ZXIucGVyc2lzdGVudFZvbHVtZS5zZWxlY3RvciB8IG5pbmRlbnQgNCB9fQp7ey0gZW5kIC19fQp7ey0gaWYgLlZhbHVlcy5zZXJ2ZXIucGVyc2lzdGVudFZvbHVtZS52b2x1bWVOYW1lIH19CiAgdm9sdW1lTmFtZTogInt7IC5WYWx1ZXMuc2VydmVyLnBlcnNpc3RlbnRWb2x1bWUudm9sdW1lTmFtZSB9fSIKe3stIGVuZCAtfX0Ke3stIGVuZCAtfX0Ke3stIGVuZCAtfX0Ke3stIGVuZCAtfX0K"},{"name":"templates/rolebinding.yaml","data":"e3stIHJhbmdlIGluY2x1ZGUgInByb21ldGhldXMubmFtZXNwYWNlcyIgLiB8IGZyb21Kc29uQXJyYXkgfX0KLS0tCmFwaVZlcnNpb246IHt7IHRlbXBsYXRlICJyYmFjLmFwaVZlcnNpb24iICQgfX0Ka2luZDogUm9sZUJpbmRpbmcKbWV0YWRhdGE6CiAgbGFiZWxzOgogICAge3stIGluY2x1ZGUgInByb21ldGhldXMuc2VydmVyLmxhYmVscyIgJCB8IG5pbmRlbnQgNCB9fQogIG5hbWU6IHt7IHRlbXBsYXRlICJwcm9tZXRoZXVzLnNlcnZlci5mdWxsbmFtZSIgJCB9fQogIG5hbWVzcGFjZToge3sgLiB9fQpzdWJqZWN0czoKICAtIGtpbmQ6IFNlcnZpY2VBY2NvdW50CiAgICBuYW1lOiB7eyB0ZW1wbGF0ZSAicHJvbWV0aGV1cy5zZXJ2aWNlQWNjb3VudE5hbWUuc2VydmVyIiAkIH19CiAgICBuYW1lc3BhY2U6IHt7IGluY2x1ZGUgInByb21ldGhldXMubmFtZXNwYWNlIiAkIH19CnJvbGVSZWY6CiAgYXBpR3JvdXA6IHJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8KICBraW5kOiBDbHVzdGVyUm9sZQogIG5hbWU6IHt7ICQuVmFsdWVzLnNlcnZlci51c2VFeGlzdGluZ0NsdXN0ZXJSb2xlTmFtZSB9fQp7eyBlbmQgLX19Cg=="},{"name":"templates/service.yaml","data":"e3stIGlmIC5WYWx1ZXMuc2VydmVyLnNlcnZpY2UuZW5hYmxlZCAtfX0KYXBpVmVyc2lvbjogdjEKa2luZDogU2VydmljZQptZXRhZGF0YToKe3stIGlmIC5WYWx1ZXMuc2VydmVyLnNlcnZpY2UuYW5ub3RhdGlvbnMgfX0KICBhbm5vdGF0aW9uczoKe3sgdG9ZYW1sIC5WYWx1ZXMuc2VydmVyLnNlcnZpY2UuYW5ub3RhdGlvbnMgfCBpbmRlbnQgNCB9fQp7ey0gZW5kIH19CiAgbGFiZWxzOgogICAge3stIGluY2x1ZGUgInByb21ldGhldXMuc2VydmVyLmxhYmVscyIgLiB8IG5pbmRlbnQgNCB9fQp7ey0gaWYgLlZhbHVlcy5zZXJ2ZXIuc2VydmljZS5sYWJlbHMgfX0Ke3sgdG9ZYW1sIC5WYWx1ZXMuc2VydmVyLnNlcnZpY2UubGFiZWxzIHwgaW5kZW50IDQgfX0Ke3stIGVuZCB9fQogIG5hbWU6IHt7IHRlbXBsYXRlICJwcm9tZXRoZXVzLnNlcnZlci5mdWxsbmFtZSIgLiB9fQogIG5hbWVzcGFjZToge3sgaW5jbHVkZSAicHJvbWV0aGV1cy5uYW1lc3BhY2UiIC4gfX0Kc3BlYzoKe3stIGlmIC5WYWx1ZXMuc2VydmVyLnNlcnZpY2UuY2x1c3RlcklQIH19CiAgY2x1c3RlcklQOiB7eyAuVmFsdWVzLnNlcnZlci5zZXJ2aWNlLmNsdXN0ZXJJUCB9fQp7ey0gZW5kIH19Cnt7LSBpZiAuVmFsdWVzLnNlcnZlci5zZXJ2aWNlLmV4dGVybmFsSVBzIH19CiAgZXh0ZXJuYWxJUHM6Cnt7IHRvWWFtbCAuVmFsdWVzLnNlcnZlci5zZXJ2aWNlLmV4dGVybmFsSVBzIHwgaW5kZW50IDQgfX0Ke3stIGVuZCB9fQp7ey0gaWYgLlZhbHVlcy5zZXJ2ZXIuc2VydmljZS5sb2FkQmFsYW5jZXJJUCB9fQogIGxvYWRCYWxhbmNlcklQOiB7eyAuVmFsdWVzLnNlcnZlci5zZXJ2aWNlLmxvYWRCYWxhbmNlcklQIH19Cnt7LSBlbmQgfX0Ke3stIGlmIC5WYWx1ZXMuc2VydmVyLnNlcnZpY2UubG9hZEJhbGFuY2VyU291cmNlUmFuZ2VzIH19CiAgbG9hZEJhbGFuY2VyU291cmNlUmFuZ2VzOgogIHt7LSByYW5nZSAkY2lkciA6PSAuVmFsdWVzLnNlcnZlci5zZXJ2aWNlLmxvYWRCYWxhbmNlclNvdXJjZVJhbmdlcyB9fQogICAgLSB7eyAkY2lkciB9fQogIHt7LSBlbmQgfX0Ke3stIGVuZCB9fQogIHBvcnRzOgogICAgLSBuYW1lOiBodHRwCiAgICAgIHBvcnQ6IHt7IC5WYWx1ZXMuc2VydmVyLnNlcnZpY2Uuc2VydmljZVBvcnQgfX0KICAgICAgcHJvdG9jb2w6IFRDUAogICAgICB0YXJnZXRQb3J0OiA5MDkwCiAgICB7ey0gaWYgLlZhbHVlcy5zZXJ2ZXIuc2VydmljZS5ub2RlUG9ydCB9fQogICAgICBub2RlUG9ydDoge3sgLlZhbHVlcy5zZXJ2ZXIuc2VydmljZS5ub2RlUG9ydCB9fQogICAge3stIGVuZCB9fQogICAge3stIGlmIC5WYWx1ZXMuc2VydmVyLnNlcnZpY2UuZ1JQQy5lbmFibGVkIH19CiAgICAtIG5hbWU6IGdycGMKICAgICAgcG9ydDoge3sgLlZhbHVlcy5zZXJ2ZXIuc2VydmljZS5nUlBDLnNlcnZpY2VQb3J0IH19CiAgICAgIHByb3RvY29sOiBUQ1AKICAgICAgdGFyZ2V0UG9ydDogMTA5MDEKICAgIHt7LSBpZiAuVmFsdWVzLnNlcnZlci5zZXJ2aWNlLmdSUEMubm9kZVBvcnQgfX0KICAgICAgbm9kZVBvcnQ6IHt7IC5WYWx1ZXMuc2VydmVyLnNlcnZpY2UuZ1JQQy5ub2RlUG9ydCB9fQogICAge3stIGVuZCB9fQogICAge3stIGVuZCB9fQp7ey0gaWYgLlZhbHVlcy5zZXJ2ZXIuc2VydmljZS5hZGRpdGlvbmFsUG9ydHMgfX0Ke3sgdG9ZYW1sIC5WYWx1ZXMuc2VydmVyLnNlcnZpY2UuYWRkaXRpb25hbFBvcnRzIHwgaW5kZW50IDQgfX0Ke3stIGVuZCB9fQogIHNlbGVjdG9yOgogIHt7LSBpZiBhbmQgLlZhbHVlcy5zZXJ2ZXIuc3RhdGVmdWxTZXQuZW5hYmxlZCAuVmFsdWVzLnNlcnZlci5zZXJ2aWNlLnN0YXRlZnVsc2V0UmVwbGljYS5lbmFibGVkIH19CiAgICBzdGF0ZWZ1bHNldC5rdWJlcm5ldGVzLmlvL3BvZC1uYW1lOiB7eyB0ZW1wbGF0ZSAicHJvbWV0aGV1cy5zZXJ2ZXIuZnVsbG5hbWUiIC4gfX0te3sgLlZhbHVlcy5zZXJ2ZXIuc2VydmljZS5zdGF0ZWZ1bHNldFJlcGxpY2EucmVwbGljYSB9fQogIHt7LSBlbHNlIC19fQogICAge3stIGluY2x1ZGUgInByb21ldGhldXMuc2VydmVyLm1hdGNoTGFiZWxzIiAuIHwgbmluZGVudCA0IH19Cnt7LSBpZiAuVmFsdWVzLnNlcnZlci5zZXJ2aWNlLnNlc3Npb25BZmZpbml0eSB9fQogIHNlc3Npb25BZmZpbml0eToge3sgLlZhbHVlcy5zZXJ2ZXIuc2VydmljZS5zZXNzaW9uQWZmaW5pdHkgfX0Ke3stIGVuZCB9fQogIHt7LSBlbmQgfX0KICB0eXBlOiAie3sgLlZhbHVlcy5zZXJ2ZXIuc2VydmljZS50eXBlIH19Igp7ey0gZW5kIC19fQo="},{"name":"templates/serviceaccount.yaml","data":"e3stIGlmIC5WYWx1ZXMuc2VydmljZUFjY291bnRzLnNlcnZlci5jcmVhdGUgfX0KYXBpVmVyc2lvbjogdjEKa2luZDogU2VydmljZUFjY291bnQKbWV0YWRhdGE6CiAgbGFiZWxzOgogICAge3stIGluY2x1ZGUgInByb21ldGhldXMuc2VydmVyLmxhYmVscyIgLiB8IG5pbmRlbnQgNCB9fQogIG5hbWU6IHt7IHRlbXBsYXRlICJwcm9tZXRoZXVzLnNlcnZpY2VBY2NvdW50TmFtZS5zZXJ2ZXIiIC4gfX0KICBuYW1lc3BhY2U6IHt7IGluY2x1ZGUgInByb21ldGhldXMubmFtZXNwYWNlIiAuIH19CiAgYW5ub3RhdGlvbnM6Cnt7IHRvWWFtbCAuVmFsdWVzLnNlcnZpY2VBY2NvdW50cy5zZXJ2ZXIuYW5ub3RhdGlvbnMgfCBpbmRlbnQgNCB9fQp7ey0gaWYga2luZElzICJib29sIiAuVmFsdWVzLnNlcnZlci5hdXRvbW91bnRTZXJ2aWNlQWNjb3VudFRva2VuIH19CmF1dG9tb3VudFNlcnZpY2VBY2NvdW50VG9rZW46IHt7IC5WYWx1ZXMuc2VydmVyLmF1dG9tb3VudFNlcnZpY2VBY2NvdW50VG9rZW4gfX0Ke3stIGVsc2UgaWYga2luZElzICJib29sIiAuVmFsdWVzLnNlcnZpY2VBY2NvdW50cy5zZXJ2ZXIuYXV0b21vdW50U2VydmljZUFjY291bnRUb2tlbiB9fQphdXRvbW91bnRTZXJ2aWNlQWNjb3VudFRva2VuOiB7eyAuVmFsdWVzLnNlcnZpY2VBY2NvdW50cy5zZXJ2ZXIuYXV0b21vdW50U2VydmljZUFjY291bnRUb2tlbiB9fQp7ey0gZW5kIH19Cnt7LSBlbmQgfX0K"},{"name":"templates/sts.yaml","data":""},{"name":"templates/vpa.yaml","data":"e3stIGlmIC5WYWx1ZXMuc2VydmVyLnZlcnRpY2FsQXV0b3NjYWxlci5lbmFibGVkIC19fQp7ey0gaWYgLkNhcGFiaWxpdGllcy5BUElWZXJzaW9ucy5IYXMgImF1dG9zY2FsaW5nLms4cy5pby92MS9WZXJ0aWNhbFBvZEF1dG9zY2FsZXIiIH19CmFwaVZlcnNpb246IGF1dG9zY2FsaW5nLms4cy5pby92MQp7ey0gZWxzZSB9fQphcGlWZXJzaW9uOiBhdXRvc2NhbGluZy5rOHMuaW8vdjFiZXRhMgp7ey0gZW5kIH19CmtpbmQ6IFZlcnRpY2FsUG9kQXV0b3NjYWxlcgptZXRhZGF0YToKICBuYW1lOiB7eyB0ZW1wbGF0ZSAicHJvbWV0aGV1cy5zZXJ2ZXIuZnVsbG5hbWUiIC4gfX0tdnBhCiAgbmFtZXNwYWNlOiB7eyBpbmNsdWRlICJwcm9tZXRoZXVzLm5hbWVzcGFjZSIgLiB9fQogIGxhYmVsczoKICAgIHt7LSBpbmNsdWRlICJwcm9tZXRoZXVzLnNlcnZlci5sYWJlbHMiIC4gfCBuaW5kZW50IDQgfX0Kc3BlYzoKICB0YXJnZXRSZWY6CiAgICBhcGlWZXJzaW9uOiAiYXBwcy92MSIKe3stIGlmIC5WYWx1ZXMuc2VydmVyLnN0YXRlZnVsU2V0LmVuYWJsZWQgfX0KICAgIGtpbmQ6IFN0YXRlZnVsU2V0Cnt7LSBlbHNlIH19CiAgICBraW5kOiBEZXBsb3ltZW50Cnt7LSBlbmQgfX0KICAgIG5hbWU6IHt7IHRlbXBsYXRlICJwcm9tZXRoZXVzLnNlcnZlci5mdWxsbmFtZSIgLiB9fQogIHVwZGF0ZVBvbGljeToKICAgIHVwZGF0ZU1vZGU6IHt7IC5WYWx1ZXMuc2VydmVyLnZlcnRpY2FsQXV0b3NjYWxlci51cGRhdGVNb2RlIHwgZGVmYXVsdCAiT2ZmIiB8IHF1b3RlIH19CiAgcmVzb3VyY2VQb2xpY3k6CiAgICBjb250YWluZXJQb2xpY2llczoge3sgLlZhbHVlcy5zZXJ2ZXIudmVydGljYWxBdXRvc2NhbGVyLmNvbnRhaW5lclBvbGljaWVzIHwgZGVmYXVsdCBsaXN0IHwgdG9ZYW1sIHwgdHJpbSB8IG5pbmRlbnQgNCB9fQp7ey0gZW5kIC19fQo="}],"values":{"alertRelabelConfigs":{},"alertmanager":{"additionalPeers":[],"affinity":{},"automountServiceAccountToken":true,"command":[],"config":{"enabled":true,"global":{},"receivers":[{"name":"default-receiver"}],"route":{"group_interval":"5m","group_wait":"10s","receiver":"default-receiver","repeat_interval":"3h"},"templates":["/etc/alertmanager/*.tmpl"]},"configAnnotations":{},"configmapReload":{"enabled":false,"extraArgs":{},"extraEnv":[],"extraVolumeMounts":[],"image":{"pullPolicy":"IfNotPresent","repository":"quay.io/prometheus-operator/prometheus-config-reloader","tag":"v0.66.0"},"name":"configmap-reload","resources":{},"securityContext":{}},"dnsConfig":{},"enabled":true,"extraArgs":{},"extraContainers":[],"extraEnv":[],"extraInitContainers":[],"extraSecretMounts":[],"extraVolumeMounts":[],"extraVolumes":[],"fullnameOverride":"","global":{},"hostAliases":[],"image":{"pullPolicy":"IfNotPresent","repository":"quay.io/prometheus/alertmanager","tag":""},"imagePullSecrets":[],"ingress":{"annotations":{},"className":"","enabled":false,"hosts":[{"host":"alertmanager.domain.com","paths":[{"path":"/","pathType":"ImplementationSpecific"}]}],"tls":[]},"ingressPerReplica":{"annotations":{},"className":"","enabled":false,"hostDomain":"domain.com","hostPrefix":"alertmanager","labels":{},"pathType":"ImplementationSpecific","paths":["/"],"tlsSecretName":"","tlsSecretPerReplica":{"enabled":false,"prefix":"alertmanager"}},"livenessProbe":{"httpGet":{"path":"/","port":"http"}},"minReadySeconds":0,"nameOverride":"","namespaceOverride":"","nodeSelector":{},"persistence":{"accessModes":["ReadWriteOnce"],"enabled":true,"size":"2Gi"},"podAnnotations":{},"podAntiAffinity":"","podAntiAffinityTopologyKey":"kubernetes.io/hostname","podDisruptionBudget":{},"podLabels":{},"podSecurityContext":{"fsGroup":65534,"runAsGroup":65534,"runAsNonRoot":true,"runAsUser":65534},"priorityClassName":"","readinessProbe":{"httpGet":{"path":"/","port":"http"}},"replicaCount":1,"resources":{},"revisionHistoryLimit":10,"schedulerName":"","securityContext":{"runAsGroup":65534,"runAsNonRoot":true,"runAsUser":65534},"service":{"annotations":{},"clusterPort":9094,"extraPorts":[],"ipDualStack":{"enabled":false,"ipFamilies":["IPv6","IPv4"],"ipFamilyPolicy":"PreferDualStack"},"labels":{},"loadBalancerIP":"","loadBalancerSourceRanges":[],"port":9093,"type":"ClusterIP"},"serviceAccount":{"annotations":{},"create":true,"name":""},"servicePerReplica":{"annotations":{},"enabled":false,"externalTrafficPolicy":"Cluster","loadBalancerSourceRanges":[],"type":"ClusterIP"},"statefulSet":{"annotations":{}},"templates":{},"testFramework":{"annotations":{"helm.sh/hook":"test-success"},"enabled":false},"tolerations":[],"topologySpreadConstraints":[]},"commonMetaLabels":{},"configmapReload":{"env":[],"prometheus":{"containerSecurityContext":{},"enabled":true,"extraArgs":{},"extraConfigmapMounts":[],"extraVolumeDirs":[],"extraVolumeMounts":[],"image":{"digest":"","pullPolicy":"IfNotPresent","repository":"quay.io/prometheus-operator/prometheus-config-reloader","tag":"v0.72.0"},"name":"configmap-reload","resources":{}},"reloadUrl":""},"extraManifests":[],"extraScrapeConfigs":"","forceNamespace":"","imagePullSecrets":[],"kube-state-metrics":{"affinity":{},"annotations":{},"autosharding":{"enabled":false},"collectors":["certificatesigningrequests","configmaps","cronjobs","daemonsets","deployments","endpoints","horizontalpodautoscalers","ingresses","jobs","leases","limitranges","mutatingwebhookconfigurations","namespaces","networkpolicies","nodes","persistentvolumeclaims","persistentvolumes","poddisruptionbudgets","pods","replicasets","replicationcontrollers","resourcequotas","secrets","services","statefulsets","storageclasses","validatingwebhookconfigurations","volumeattachments"],"containerSecurityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true},"containers":[],"customLabels":{},"customResourceState":{"config":{},"enabled":false},"enabled":true,"extraArgs":[],"extraManifests":[],"global":{"imagePullSecrets":[],"imageRegistry":""},"hostNetwork":false,"image":{"pullPolicy":"IfNotPresent","registry":"registry.k8s.io","repository":"kube-state-metrics/kube-state-metrics","sha":"","tag":""},"imagePullSecrets":[],"initContainers":[],"kubeRBACProxy":{"containerSecurityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true},"enabled":false,"extraArgs":[],"image":{"pullPolicy":"IfNotPresent","registry":"quay.io","repository":"brancz/kube-rbac-proxy","sha":"","tag":"v0.16.0"},"resources":{},"volumeMounts":[]},"kubeTargetVersionOverride":"","kubeconfig":{"enabled":false,"secret":null},"livenessProbe":{"failureThreshold":3,"httpGet":{"httpHeaders":[],"scheme":"http"},"initialDelaySeconds":5,"periodSeconds":10,"successThreshold":1,"timeoutSeconds":5},"metricAllowlist":[],"metricAnnotationsAllowList":[],"metricDenylist":[],"metricLabelsAllowlist":[],"namespaceOverride":"","namespaces":"","namespacesDenylist":"","networkPolicy":{"enabled":false,"flavor":"kubernetes"},"nodeSelector":{},"podAnnotations":{},"podDisruptionBudget":{},"podSecurityPolicy":{"additionalVolumes":[],"annotations":{},"enabled":false},"prometheus":{"monitor":{"additionalLabels":{},"annotations":{},"bearerTokenFile":"","bearerTokenSecret":{},"enabled":false,"honorLabels":false,"interval":"","jobLabel":"","labelLimit":0,"labelNameLengthLimit":0,"labelValueLengthLimit":0,"metricRelabelings":[],"namespace":"","namespaceSelector":[],"podTargetLabels":[],"proxyUrl":"","relabelings":[],"sampleLimit":0,"scheme":"","scrapeTimeout":"","selectorOverride":{},"targetLabels":[],"targetLimit":0,"tlsConfig":{}}},"prometheusScrape":true,"rbac":{"create":true,"extraRules":[],"useClusterRole":true},"readinessProbe":{"failureThreshold":3,"httpGet":{"httpHeaders":[],"scheme":"http"},"initialDelaySeconds":5,"periodSeconds":10,"successThreshold":1,"timeoutSeconds":5},"releaseLabel":false,"releaseNamespace":false,"replicas":1,"resources":{},"revisionHistoryLimit":10,"securityContext":{"enabled":true,"fsGroup":65534,"runAsGroup":65534,"runAsNonRoot":true,"runAsUser":65534,"seccompProfile":{"type":"RuntimeDefault"}},"selectorOverride":{},"selfMonitor":{"enabled":false},"service":{"annotations":{},"clusterIP":"","loadBalancerIP":"","loadBalancerSourceRanges":[],"nodePort":0,"port":8080,"type":"ClusterIP"},"serviceAccount":{"annotations":{},"create":true,"imagePullSecrets":[],"name":null},"tolerations":[],"topologySpreadConstraints":[],"verticalPodAutoscaler":{"controlledResources":[],"enabled":false,"maxAllowed":{},"minAllowed":{}},"volumeMounts":[],"volumes":[]},"networkPolicy":{"enabled":false},"podSecurityPolicy":{"enabled":false},"prometheus-node-exporter":{"affinity":{},"configmaps":[],"containerSecurityContext":{"allowPrivilegeEscalation":false,"readOnlyRootFilesystem":true},"daemonsetAnnotations":{},"dnsConfig":{},"enabled":true,"endpoints":[],"env":{},"extraArgs":[],"extraHostVolumeMounts":[],"extraInitContainers":[],"extraManifests":[],"fullnameOverride":"","global":{"imagePullSecrets":[],"imageRegistry":""},"hostNetwork":true,"hostPID":true,"hostProcFsMount":{"mountPropagation":""},"hostRootFsMount":{"enabled":true,"mountPropagation":"HostToContainer"},"hostSysFsMount":{"mountPropagation":""},"image":{"digest":"","pullPolicy":"IfNotPresent","registry":"quay.io","repository":"prometheus/node-exporter","tag":""},"imagePullSecrets":[],"kubeRBACProxy":{"containerSecurityContext":{},"enableHostPort":false,"enableProxyEndpointsHostPort":false,"enabled":false,"env":{},"extraArgs":[],"image":{"pullPolicy":"IfNotPresent","registry":"quay.io","repository":"brancz/kube-rbac-proxy","sha":"","tag":"v0.16.0"},"port":8100,"portName":"http","proxyEndpointsPort":8888,"resources":{}},"livenessProbe":{"failureThreshold":3,"httpGet":{"httpHeaders":[],"scheme":"http"},"initialDelaySeconds":0,"periodSeconds":10,"successThreshold":1,"timeoutSeconds":1},"nameOverride":"","namespaceOverride":"","networkPolicy":{"enabled":false},"nodeSelector":{"kubernetes.io/os":"linux"},"podAnnotations":{"cluster-autoscaler.kubernetes.io/safe-to-evict":"true"},"podLabels":{},"prometheus":{"monitor":{"additionalLabels":{},"apiVersion":"","attachMetadata":{"node":false},"basicAuth":{},"bearerTokenFile":null,"enabled":false,"interval":"","jobLabel":"","labelLimit":0,"labelNameLengthLimit":0,"labelValueLengthLimit":0,"metricRelabelings":[],"namespace":"","podTargetLabels":[],"proxyUrl":"","relabelings":[],"sampleLimit":0,"scheme":"http","scrapeTimeout":"10s","selectorOverride":{},"targetLimit":0,"tlsConfig":{}},"podMonitor":{"additionalLabels":{},"apiVersion":"","attachMetadata":{"node":false},"authorization":{},"basicAuth":{},"bearerTokenSecret":{},"enableHttp2":"","enabled":false,"filterRunning":"","followRedirects":"","honorLabels":true,"honorTimestamps":true,"interval":"","jobLabel":"","labelLimit":0,"labelNameLengthLimit":0,"labelValueLengthLimit":0,"metricRelabelings":[],"namespace":"","oauth2":{},"params":{},"path":"/metrics","podTargetLabels":[],"proxyUrl":"","relabelings":[],"sampleLimit":0,"scheme":"http","scrapeTimeout":"","selectorOverride":{},"targetLimit":0,"tlsConfig":{}}},"rbac":{"create":true,"pspAnnotations":{},"pspEnabled":false},"readinessProbe":{"failureThreshold":3,"httpGet":{"httpHeaders":[],"scheme":"http"},"initialDelaySeconds":0,"periodSeconds":10,"successThreshold":1,"timeoutSeconds":1},"releaseLabel":false,"resources":{},"restartPolicy":null,"revisionHistoryLimit":10,"secrets":[],"securityContext":{"fsGroup":65534,"runAsGroup":65534,"runAsNonRoot":true,"runAsUser":65534},"service":{"annotations":{"prometheus.io/scrape":"true"},"enabled":true,"ipDualStack":{"enabled":false,"ipFamilies":["IPv6","IPv4"],"ipFamilyPolicy":"PreferDualStack"},"listenOnAllInterfaces":true,"nodePort":null,"port":9100,"portName":"metrics","targetPort":9100,"type":"ClusterIP"},"serviceAccount":{"annotations":{},"automountServiceAccountToken":false,"create":true,"imagePullSecrets":[],"name":null},"sidecarHostVolumeMounts":[],"sidecarVolumeMount":[],"sidecars":[],"terminationGracePeriodSeconds":null,"terminationMessageParams":{"enabled":false,"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File"},"tolerations":[{"effect":"NoSchedule","operator":"Exists"}],"updateStrategy":{"rollingUpdate":{"maxUnavailable":1},"type":"RollingUpdate"},"version":"","verticalPodAutoscaler":{"controlledResources":[],"enabled":false,"maxAllowed":{},"minAllowed":{}}},"prometheus-pushgateway":{"affinity":{},"automountServiceAccountToken":true,"containerSecurityContext":{},"enabled":true,"extraArgs":[],"extraContainers":[],"extraInitContainers":[],"extraManifests":[],"extraVars":[],"extraVolumeMounts":[],"extraVolumes":[],"fullnameOverride":"","global":{},"hostAliases":[],"image":{"pullPolicy":"IfNotPresent","repository":"quay.io/prometheus/pushgateway","tag":""},"imagePullSecrets":[],"ingress":{"className":"","enabled":false,"extraPaths":[],"path":"/","pathType":"ImplementationSpecific"},"liveness":{"enabled":true,"probe":{"httpGet":{"path":"/-/healthy","port":9091},"initialDelaySeconds":10,"timeoutSeconds":10}},"nameOverride":"","namespaceOverride":"","networkPolicy":{},"nodeSelector":{},"persistentVolume":{"accessModes":["ReadWriteOnce"],"annotations":{},"enabled":false,"existingClaim":"","mountPath":"/data","size":"2Gi","subPath":""},"persistentVolumeLabels":{},"podAnnotations":{},"podAntiAffinity":"","podAntiAffinityTopologyKey":"kubernetes.io/hostname","podDisruptionBudget":{},"podLabels":{},"priorityClassName":null,"readiness":{"enabled":true,"probe":{"httpGet":{"path":"/-/ready","port":9091},"initialDelaySeconds":10,"timeoutSeconds":10}},"replicaCount":1,"resources":{},"runAsStatefulSet":false,"securityContext":{"fsGroup":65534,"runAsNonRoot":true,"runAsUser":65534},"service":{"clusterIP":"","ipDualStack":{"enabled":false,"ipFamilies":["IPv6","IPv4"],"ipFamilyPolicy":"PreferDualStack"},"loadBalancerIP":"","loadBalancerSourceRanges":[],"port":9091,"targetPort":9091,"type":"ClusterIP"},"serviceAccount":{"create":true,"name":null},"serviceAccountLabels":{},"serviceAnnotations":{"prometheus.io/probe":"pushgateway"},"serviceLabels":{},"serviceMonitor":{"additionalLabels":{},"enabled":false,"honorLabels":true,"metricRelabelings":[],"namespace":"monitoring","relabelings":[],"telemetryPath":"/metrics"},"strategy":{"type":"Recreate"},"tolerations":[],"topologySpreadConstraints":[],"webConfiguration":{}},"rbac":{"create":true},"ruleFiles":{},"scrapeConfigFiles":[],"server":{"affinity":{},"alertmanagers":[],"baseURL":"","clusterRoleNameOverride":"","command":[],"configMapAnnotations":{},"configMapOverrideName":"","configPath":"/etc/config/prometheus.yml","containerSecurityContext":{},"defaultFlagsOverride":[],"deploymentAnnotations":{},"dnsConfig":{},"dnsPolicy":"ClusterFirst","emptyDir":{"sizeLimit":""},"enableServiceLinks":true,"env":[],"exemplars":{},"extraArgs":{},"extraConfigmapLabels":{},"extraConfigmapMounts":[],"extraFlags":["web.enable-lifecycle"],"extraHostPathMounts":[],"extraInitContainers":[],"extraSecretMounts":[],"extraVolumeMounts":[],"extraVolumes":[],"global":{"evaluation_interval":"1m","scrape_interval":"1m","scrape_timeout":"10s"},"hostAliases":[],"hostNetwork":false,"image":{"digest":"","pullPolicy":"IfNotPresent","repository":"quay.io/prometheus/prometheus","tag":""},"ingress":{"annotations":{},"enabled":false,"extraLabels":{},"extraPaths":[],"hosts":[],"path":"/","pathType":"Prefix","tls":[]},"livenessProbeFailureThreshold":3,"livenessProbeInitialDelay":30,"livenessProbePeriodSeconds":15,"livenessProbeSuccessThreshold":1,"livenessProbeTimeout":10,"name":"server","nodeSelector":{},"persistentVolume":{"accessModes":["ReadWriteOnce"],"annotations":{},"enabled":true,"existingClaim":"","labels":{},"mountPath":"/data","size":"8Gi","statefulSetNameOverride":"","subPath":""},"podAnnotations":{},"podAntiAffinity":"","podAntiAffinityTopologyKey":"kubernetes.io/hostname","podDisruptionBudget":{"enabled":false,"maxUnavailable":1},"podLabels":{},"podSecurityPolicy":{"annotations":{}},"portName":"","prefixURL":"","priorityClassName":"","probeHeaders":[],"probeScheme":"HTTP","readinessProbeFailureThreshold":3,"readinessProbeInitialDelay":30,"readinessProbePeriodSeconds":5,"readinessProbeSuccessThreshold":1,"readinessProbeTimeout":4,"releaseNamespace":false,"remoteRead":[],"remoteWrite":[],"replicaCount":1,"resources":{},"retention":"15d","retentionSize":"","revisionHistoryLimit":10,"securityContext":{"fsGroup":65534,"runAsGroup":65534,"runAsNonRoot":true,"runAsUser":65534},"service":{"additionalPorts":[],"annotations":{},"clusterIP":"","enabled":true,"externalIPs":[],"gRPC":{"enabled":false,"servicePort":10901},"labels":{},"loadBalancerIP":"","loadBalancerSourceRanges":[],"servicePort":80,"sessionAffinity":"None","statefulsetReplica":{"enabled":false,"replica":0},"type":"ClusterIP"},"sidecarContainers":{},"sidecarTemplateValues":{},"startupProbe":{"enabled":false,"failureThreshold":30,"periodSeconds":5,"timeoutSeconds":10},"statefulSet":{"annotations":{},"enabled":false,"headless":{"annotations":{},"gRPC":{"enabled":false,"servicePort":10901},"labels":{},"servicePort":80},"labels":{},"podManagementPolicy":"OrderedReady","pvcDeleteOnStsDelete":false,"pvcDeleteOnStsScale":false},"storagePath":"","strategy":{"type":"Recreate"},"tcpSocketProbeEnabled":false,"terminationGracePeriodSeconds":300,"tolerations":[],"topologySpreadConstraints":[],"tsdb":{},"verticalAutoscaler":{"enabled":false}},"serverFiles":{"alerting_rules.yml":{},"alerts":{},"prometheus.yml":{"rule_files":["/etc/config/recording_rules.yml","/etc/config/alerting_rules.yml","/etc/config/rules","/etc/config/alerts"],"scrape_configs":[{"job_name":"prometheus","static_configs":[{"targets":["localhost:9090"]}]},{"bearer_token_file":"/var/run/secrets/kubernetes.io/serviceaccount/token","job_name":"kubernetes-apiservers","kubernetes_sd_configs":[{"role":"endpoints"}],"relabel_configs":[{"action":"keep","regex":"default;kubernetes;https","source_labels":["__meta_kubernetes_namespace","__meta_kubernetes_service_name","__meta_kubernetes_endpoint_port_name"]}],"scheme":"https","tls_config":{"ca_file":"/var/run/secrets/kubernetes.io/serviceaccount/ca.crt","insecure_skip_verify":true}},{"bearer_token_file":"/var/run/secrets/kubernetes.io/serviceaccount/token","job_name":"kubernetes-nodes","kubernetes_sd_configs":[{"role":"node"}],"relabel_configs":[{"action":"labelmap","regex":"__meta_kubernetes_node_label_(.+)"},{"replacement":"kubernetes.default.svc:443","target_label":"__address__"},{"regex":"(.+)","replacement":"/api/v1/nodes/$1/proxy/metrics","source_labels":["__meta_kubernetes_node_name"],"target_label":"__metrics_path__"}],"scheme":"https","tls_config":{"ca_file":"/var/run/secrets/kubernetes.io/serviceaccount/ca.crt","insecure_skip_verify":true}},{"bearer_token_file":"/var/run/secrets/kubernetes.io/serviceaccount/token","job_name":"kubernetes-nodes-cadvisor","kubernetes_sd_configs":[{"role":"node"}],"relabel_configs":[{"action":"labelmap","regex":"__meta_kubernetes_node_label_(.+)"},{"replacement":"kubernetes.default.svc:443","target_label":"__address__"},{"regex":"(.+)","replacement":"/api/v1/nodes/$1/proxy/metrics/cadvisor","source_labels":["__meta_kubernetes_node_name"],"target_label":"__metrics_path__"}],"scheme":"https","tls_config":{"ca_file":"/var/run/secrets/kubernetes.io/serviceaccount/ca.crt","insecure_skip_verify":true}},{"honor_labels":true,"job_name":"kubernetes-service-endpoints","kubernetes_sd_configs":[{"role":"endpoints"}],"relabel_configs":[{"action":"keep","regex":true,"source_labels":["__meta_kubernetes_service_annotation_prometheus_io_scrape"]},{"action":"drop","regex":true,"source_labels":["__meta_kubernetes_service_annotation_prometheus_io_scrape_slow"]},{"action":"replace","regex":"(https?)","source_labels":["__meta_kubernetes_service_annotation_prometheus_io_scheme"],"target_label":"__scheme__"},{"action":"replace","regex":"(.+)","source_labels":["__meta_kubernetes_service_annotation_prometheus_io_path"],"target_label":"__metrics_path__"},{"action":"replace","regex":"(.+?)(?::\\d+)?;(\\d+)","replacement":"$1:$2","source_labels":["__address__","__meta_kubernetes_service_annotation_prometheus_io_port"],"target_label":"__address__"},{"action":"labelmap","regex":"__meta_kubernetes_service_annotation_prometheus_io_param_(.+)","replacement":"__param_$1"},{"action":"labelmap","regex":"__meta_kubernetes_service_label_(.+)"},{"action":"replace","source_labels":["__meta_kubernetes_namespace"],"target_label":"namespace"},{"action":"replace","source_labels":["__meta_kubernetes_service_name"],"target_label":"service"},{"action":"replace","source_labels":["__meta_kubernetes_pod_node_name"],"target_label":"node"}]},{"honor_labels":true,"job_name":"kubernetes-service-endpoints-slow","kubernetes_sd_configs":[{"role":"endpoints"}],"relabel_configs":[{"action":"keep","regex":true,"source_labels":["__meta_kubernetes_service_annotation_prometheus_io_scrape_slow"]},{"action":"replace","regex":"(https?)","source_labels":["__meta_kubernetes_service_annotation_prometheus_io_scheme"],"target_label":"__scheme__"},{"action":"replace","regex":"(.+)","source_labels":["__meta_kubernetes_service_annotation_prometheus_io_path"],"target_label":"__metrics_path__"},{"action":"replace","regex":"(.+?)(?::\\d+)?;(\\d+)","replacement":"$1:$2","source_labels":["__address__","__meta_kubernetes_service_annotation_prometheus_io_port"],"target_label":"__address__"},{"action":"labelmap","regex":"__meta_kubernetes_service_annotation_prometheus_io_param_(.+)","replacement":"__param_$1"},{"action":"labelmap","regex":"__meta_kubernetes_service_label_(.+)"},{"action":"replace","source_labels":["__meta_kubernetes_namespace"],"target_label":"namespace"},{"action":"replace","source_labels":["__meta_kubernetes_service_name"],"target_label":"service"},{"action":"replace","source_labels":["__meta_kubernetes_pod_node_name"],"target_label":"node"}],"scrape_interval":"5m","scrape_timeout":"30s"},{"honor_labels":true,"job_name":"prometheus-pushgateway","kubernetes_sd_configs":[{"role":"service"}],"relabel_configs":[{"action":"keep","regex":"pushgateway","source_labels":["__meta_kubernetes_service_annotation_prometheus_io_probe"]}]},{"honor_labels":true,"job_name":"kubernetes-services","kubernetes_sd_configs":[{"role":"service"}],"metrics_path":"/probe","params":{"module":["http_2xx"]},"relabel_configs":[{"action":"keep","regex":true,"source_labels":["__meta_kubernetes_service_annotation_prometheus_io_probe"]},{"source_labels":["__address__"],"target_label":"__param_target"},{"replacement":"blackbox","target_label":"__address__"},{"source_labels":["__param_target"],"target_label":"instance"},{"action":"labelmap","regex":"__meta_kubernetes_service_label_(.+)"},{"source_labels":["__meta_kubernetes_namespace"],"target_label":"namespace"},{"source_labels":["__meta_kubernetes_service_name"],"target_label":"service"}]},{"honor_labels":true,"job_name":"kubernetes-pods","kubernetes_sd_configs":[{"role":"pod"}],"relabel_configs":[{"action":"keep","regex":true,"source_labels":["__meta_kubernetes_pod_annotation_prometheus_io_scrape"]},{"action":"drop","regex":true,"source_labels":["__meta_kubernetes_pod_annotation_prometheus_io_scrape_slow"]},{"action":"replace","regex":"(https?)","source_labels":["__meta_kubernetes_pod_annotation_prometheus_io_scheme"],"target_label":"__scheme__"},{"action":"replace","regex":"(.+)","source_labels":["__meta_kubernetes_pod_annotation_prometheus_io_path"],"target_label":"__metrics_path__"},{"action":"replace","regex":"(\\d+);(([A-Fa-f0-9]{1,4}::?){1,7}[A-Fa-f0-9]{1,4})","replacement":"[$2]:$1","source_labels":["__meta_kubernetes_pod_annotation_prometheus_io_port","__meta_kubernetes_pod_ip"],"target_label":"__address__"},{"action":"replace","regex":"(\\d+);((([0-9]+?)(\\.|$)){4})","replacement":"$2:$1","source_labels":["__meta_kubernetes_pod_annotation_prometheus_io_port","__meta_kubernetes_pod_ip"],"target_label":"__address__"},{"action":"labelmap","regex":"__meta_kubernetes_pod_annotation_prometheus_io_param_(.+)","replacement":"__param_$1"},{"action":"labelmap","regex":"__meta_kubernetes_pod_label_(.+)"},{"action":"replace","source_labels":["__meta_kubernetes_namespace"],"target_label":"namespace"},{"action":"replace","source_labels":["__meta_kubernetes_pod_name"],"target_label":"pod"},{"action":"drop","regex":"Pending|Succeeded|Failed|Completed","source_labels":["__meta_kubernetes_pod_phase"]},{"action":"replace","source_labels":["__meta_kubernetes_pod_node_name"],"target_label":"node"}]},{"honor_labels":true,"job_name":"kubernetes-pods-slow","kubernetes_sd_configs":[{"role":"pod"}],"relabel_configs":[{"action":"keep","regex":true,"source_labels":["__meta_kubernetes_pod_annotation_prometheus_io_scrape_slow"]},{"action":"replace","regex":"(https?)","source_labels":["__meta_kubernetes_pod_annotation_prometheus_io_scheme"],"target_label":"__scheme__"},{"action":"replace","regex":"(.+)","source_labels":["__meta_kubernetes_pod_annotation_prometheus_io_path"],"target_label":"__metrics_path__"},{"action":"replace","regex":"(\\d+);(([A-Fa-f0-9]{1,4}::?){1,7}[A-Fa-f0-9]{1,4})","replacement":"[$2]:$1","source_labels":["__meta_kubernetes_pod_annotation_prometheus_io_port","__meta_kubernetes_pod_ip"],"target_label":"__address__"},{"action":"replace","regex":"(\\d+);((([0-9]+?)(\\.|$)){4})","replacement":"$2:$1","source_labels":["__meta_kubernetes_pod_annotation_prometheus_io_port","__meta_kubernetes_pod_ip"],"target_label":"__address__"},{"action":"labelmap","regex":"__meta_kubernetes_pod_annotation_prometheus_io_param_(.+)","replacement":"__param_$1"},{"action":"labelmap","regex":"__meta_kubernetes_pod_label_(.+)"},{"action":"replace","source_labels":["__meta_kubernetes_namespace"],"target_label":"namespace"},{"action":"replace","source_labels":["__meta_kubernetes_pod_name"],"target_label":"pod"},{"action":"drop","regex":"Pending|Succeeded|Failed|Completed","source_labels":["__meta_kubernetes_pod_phase"]},{"action":"replace","source_labels":["__meta_kubernetes_pod_node_name"],"target_label":"node"}],"scrape_interval":"5m","scrape_timeout":"30s"}]},"recording_rules.yml":{},"rules":{}},"serviceAccounts":{"server":{"annotations":{},"create":true,"name":""}}},"schema":"","files":[{"name":".helmignore","data":"IyBQYXR0ZXJucyB0byBpZ25vcmUgd2hlbiBidWlsZGluZyBwYWNrYWdlcy4KIyBUaGlzIHN1cHBvcnRzIHNoZWxsIGdsb2IgbWF0Y2hpbmcsIHJlbGF0aXZlIHBhdGggbWF0Y2hpbmcsIGFuZAojIG5lZ2F0aW9uIChwcmVmaXhlZCB3aXRoICEpLiBPbmx5IG9uZSBwYXR0ZXJuIHBlciBsaW5lLgouRFNfU3RvcmUKIyBDb21tb24gVkNTIGRpcnMKLmdpdC8KLmdpdGlnbm9yZQouYnpyLwouYnpyaWdub3JlCi5oZy8KLmhnaWdub3JlCi5zdm4vCiMgQ29tbW9uIGJhY2t1cCBmaWxlcwoqLnN3cAoqLmJhawoqLnRtcAoqfgojIFZhcmlvdXMgSURFcwoucHJvamVjdAouaWRlYS8KKi50bXByb2oKCk9XTkVSUwo="},{"name":"README.md","data":""},{"name":"ci/01-automount-sa-token-values.yaml","data":"LS0tCiMjIFRlc3QgY2FzZTogYXV0b21vdW50IFNBIHRva2VuCnNlcnZpY2VBY2NvdW50czoKICBzZXJ2ZXI6CiAgICBhdXRvbW91bnRTZXJ2aWNlQWNjb3VudFRva2VuOiB0cnVlCg=="},{"name":"ci/02-config-reloader-deployment-values.yaml","data":"LS0tCiMjIFRlc3QgY2FzZTogdGVzdCBjb25maWctcmVsb2FkZXIgaW4gZGVwbG95bWVudApjb25maWdtYXBSZWxvYWQ6CiAgZW52OgogICAgLSBuYW1lOiBBUFBOQU1FCiAgICAgIHZhbHVlOiAicHJvbWV0aGV1cy1jb25maWctcmVsb2FkZXIiCgogIHByb21ldGhldXM6CiAgICBjb250YWluZXJTZWN1cml0eUNvbnRleHQ6CiAgICAgIGFsbG93UHJpdmlsZWdlRXNjYWxhdGlvbjogZmFsc2UKICAgICAgY2FwYWJpbGl0aWVzOgogICAgICAgIGRyb3A6CiAgICAgICAgICAtIEFMTAogICAgICBydW5Bc05vblJvb3Q6IHRydWUKICAgICAgcmVhZE9ubHlSb290RmlsZXN5c3RlbTogdHJ1ZQogICAgICBzZWNjb21wUHJvZmlsZToKICAgICAgICB0eXBlOiBSdW50aW1lRGVmYXVsdAoKICAgIGV4dHJhQXJnczoKICAgICAgbG9nLWxldmVsOiBkZWJ1ZwogICAgICB3YXRjaC1pbnRlcnZhbDogMW0KCnNlcnZlcjoKICBzdGF0ZWZ1bFNldDoKICAgIGVuYWJsZWQ6IGZhbHNlCg=="},{"name":"ci/03-config-reloader-sts-values.yaml","data":"LS0tCiMjIFRlc3QgY2FzZTogdGVzdCBjb25maWctcmVsb2FkZXIgaW4gc3RhdGVmdWxzZXQKY29uZmlnbWFwUmVsb2FkOgogIGVudjoKICAgIC0gbmFtZTogQVBQTkFNRQogICAgICB2YWx1ZTogInByb21ldGhldXMtY29uZmlnLXJlbG9hZGVyIgoKICBwcm9tZXRoZXVzOgogICAgY29udGFpbmVyU2VjdXJpdHlDb250ZXh0OgogICAgICBhbGxvd1ByaXZpbGVnZUVzY2FsYXRpb246IGZhbHNlCiAgICAgIGNhcGFiaWxpdGllczoKICAgICAgICBkcm9wOgogICAgICAgICAgLSBBTEwKICAgICAgcnVuQXNOb25Sb290OiB0cnVlCiAgICAgIHJlYWRPbmx5Um9vdEZpbGVzeXN0ZW06IHRydWUKICAgICAgc2VjY29tcFByb2ZpbGU6CiAgICAgICAgdHlwZTogUnVudGltZURlZmF1bHQKCiAgICBleHRyYUFyZ3M6CiAgICAgIGxvZy1sZXZlbDogZGVidWcKICAgICAgd2F0Y2gtaW50ZXJ2YWw6IDFtCgpzZXJ2ZXI6CiAgc3RhdGVmdWxTZXQ6CiAgICBlbmFibGVkOiB0cnVlCg=="},{"name":"ci/04-extra-manifest-values.yaml","data":"LS0tCiMjIFRlc3QgY2FzZTogc2V0IGV4dHJhIG1hbmlmZXN0cyB0byBkZXBsb3kKZXh0cmFNYW5pZmVzdHM6CiAgLSB8CiAgICBhcGlWZXJzaW9uOiB2MQogICAga2luZDogQ29uZmlnTWFwCiAgICBtZXRhZGF0YToKICAgICAgbGFiZWxzOgogICAgICAgIGNpOiAidHJ1ZSIKICAgICAgbmFtZTogcHJvbWV0aGV1cy1leHRyYS1jbS1maXJzdAogICAgZGF0YToKICAgICAgR1JFRVRJTkc6ICJoZWxsbyIKICAtIHwKICAgIGFwaVZlcnNpb246IHYxCiAgICBraW5kOiBDb25maWdNYXAKICAgIG1ldGFkYXRhOgogICAgICBsYWJlbHM6CiAgICAgICAgY2k6ICJ0cnVlIgogICAgICBuYW1lOiBwcm9tZXRoZXVzLWV4dHJhLWNtLXNlY29uZAogICAgZGF0YToKICAgICAgcHJvbWV0aGV1cy50eHQ6ICJ7eyBpbmNsdWRlICJwcm9tZXRoZXVzLnNlcnZlci5mdWxsbmFtZSIgLiB9fSIKICAgIGltbXV0YWJsZTogdHJ1ZQo="},{"name":"ci/05-server-deployment-values.yaml","data":"LS0tCiMjIFRlc3QgY2FzZTogc2V0IHZhcmlvdXMgZmllbGRzIGluIGRlcGxveW1lbnQKc2VydmVyOgogIGF1dG9tb3VudFNlcnZpY2VBY2NvdW50VG9rZW46IHRydWUKCiAgY2x1c3RlclJvbGVOYW1lT3ZlcnJpZGU6ICJjaS1wcm9tZXRoZXVzLXNlcnZlci1jbHVzdGVyLXJvbGUiCgogIGNvbnRhaW5lclNlY3VyaXR5Q29udGV4dDoKICAgIGFsbG93UHJpdmlsZWdlRXNjYWxhdGlvbjogZmFsc2UKICAgIGNhcGFiaWxpdGllczoKICAgICAgZHJvcDoKICAgICAgICAtIEFMTAogICAgc2VjY29tcFByb2ZpbGU6CiAgICAgIHR5cGU6IFJ1bnRpbWVEZWZhdWx0CgogIGVudjoKICAgIC0gbmFtZTogQVBQTkFNRQogICAgICB2YWx1ZTogcHJvbWV0aGV1cwoKICBleHRyYUFyZ3M6CiAgICBxdWVyeS50aW1lb3V0OiAxbQogICAgcXVlcnkubWF4LWNvbmN1cnJlbmN5OiAxNQoKICBnbG9iYWw6CiAgICBleHRlcm5hbF9sYWJlbHM6CiAgICAgIGNsdXN0ZXI6ICJjaSIKCiAgcGVyc2lzdGVudFZvbHVtZToKICAgIGVuYWJsZWQ6IHRydWUKICAgIHNpemU6IDJHaQoKICBwcmVmaXhVUkw6IC9wcm9tZXRoZXVzCgogIHJldGVudGlvblNpemU6IDFHQgoKICBzdGFydHVwUHJvYmU6CiAgICBlbmFibGVkOiB0cnVlCgogIHN0YXRlZnVsU2V0OgogICAgZW5hYmxlZDogZmFsc2UKCiAgdHNkYjoKICAgIG91dF9vZl9vcmRlcl90aW1lX3dpbmRvdzogMTBzCg=="},{"name":"ci/06-server-sts-values.yaml","data":"LS0tCiMgVGVzdCBjYXNlOiBzZXQgdmFyaW91cyBmaWVsZHMgaW4gc3RhdGVmdWxzZXQKc2VydmVyOgogIGF1dG9tb3VudFNlcnZpY2VBY2NvdW50VG9rZW46IHRydWUKCiAgY2x1c3RlclJvbGVOYW1lT3ZlcnJpZGU6ICJjaS1wcm9tZXRoZXVzLXNlcnZlci1jbHVzdGVyLXJvbGUiCgogIGNvbnRhaW5lclNlY3VyaXR5Q29udGV4dDoKICAgIGFsbG93UHJpdmlsZWdlRXNjYWxhdGlvbjogZmFsc2UKICAgIGNhcGFiaWxpdGllczoKICAgICAgZHJvcDoKICAgICAgICAtIEFMTAogICAgc2VjY29tcFByb2ZpbGU6CiAgICAgIHR5cGU6IFJ1bnRpbWVEZWZhdWx0CgogIGVudjoKICAgIC0gbmFtZTogQVBQTkFNRQogICAgICB2YWx1ZTogcHJvbWV0aGV1cwoKICBleHRyYUFyZ3M6CiAgICBxdWVyeS50aW1lb3V0OiAxbQogICAgcXVlcnkubWF4LWNvbmN1cnJlbmN5OiAxNQoKICBnbG9iYWw6CiAgICBleHRlcm5hbF9sYWJlbHM6CiAgICAgIGNsdXN0ZXI6ICJjaSIKCiAgcGVyc2lzdGVudFZvbHVtZToKICAgIGVuYWJsZWQ6IHRydWUKICAgIHN0YXRlZnVsU2V0TmFtZU92ZXJyaWRlOiAiY2ktcHJvbWV0aGV1cy1zZXJ2ZXItcHZjIgogICAgc2l6ZTogMkdpCgogIHByZWZpeFVSTDogL3Byb21ldGhldXMKCiAgcmV0ZW50aW9uU2l6ZTogMUdCCgogIHN0YXJ0dXBQcm9iZToKICAgIGVuYWJsZWQ6IHRydWUKCiAgc3RhdGVmdWxTZXQ6CiAgICBlbmFibGVkOiB0cnVlCgogIHRzZGI6CiAgICBvdXRfb2Zfb3JkZXJfdGltZV93aW5kb3c6IDEwcwo="},{"name":"ci/07-meta-labels-values.yaml","data":"LS0tCiMgVGVzdCBjYXNlOiBzZXQgbWV0YSBsYWJlbHMKY29tbW9uTWV0YUxhYmVsczoKICBjaTogInRydWUiCiAgZW52OiAiY2kiCg=="},{"name":"ci/08-sts-pvc-retention-policy-values.yaml","data":"LS0tCiMjIFRlc3QgY2FzZTogc2V0IFBWQyByZXRlbnRpb24gcG9saWN5IGluIHN0YXRlZnVsc2V0CnNlcnZlcjoKICBhdXRvbW91bnRTZXJ2aWNlQWNjb3VudFRva2VuOiB0cnVlCgogIHN0YXRlZnVsU2V0OgogICAgZW5hYmxlZDogdHJ1ZQogICAgcHZjRGVsZXRlT25TdHNEZWxldGU6IHRydWUKICAgIHB2Y0RlbGV0ZU9uU3RzU2NhbGU6IHRydWUKCiAgcGVyc2lzdGVudFZvbHVtZToKICAgIGVuYWJsZWQ6IHRydWUKICAgIHNpemU6IDJHaQo="},{"name":"ci/09-standalone-deployment-values.yaml","data":"LS0tCiMjIFRlc3QgY2FzZTogcnVuIHN0YW5kYWxvbmUgUHJvbWV0aGV1cyBkZXBsb3ltZW50CmFsZXJ0bWFuYWdlcjoKICBlbmFibGVkOiBmYWxzZQoKa3ViZS1zdGF0ZS1tZXRyaWNzOgogIGVuYWJsZWQ6IGZhbHNlCgpwcm9tZXRoZXVzLW5vZGUtZXhwb3J0ZXI6CiAgZW5hYmxlZDogZmFsc2UKCnByb21ldGhldXMtcHVzaGdhdGV3YXk6CiAgZW5hYmxlZDogZmFsc2UKCnNlcnZlcjoKICBhdXRvbW91bnRTZXJ2aWNlQWNjb3VudFRva2VuOiB0cnVlCiAgcGVyc2lzdGVudFZvbHVtZToKICAgIGVuYWJsZWQ6IGZhbHNlCg=="},{"name":"ci/10-namespaced-sd-values.yaml","data":"LS0tCiMjIFRlc3QgY2FzZTogUHJvbWV0aGV1cyB3aXRoIG5hbWVzcGFjZWQgU0QKIyMgUHJvbWV0aGV1cyBydW5zIHNlcnZpY2UgZGlzY292ZXJ5IChTRCkgaW4gaXRzIG93biBuYW1lc3BhY2Ugb25seS4KIyMgQSBjdXN0b20gY2x1c3RlciByb2xlIGlzIHNldCB1cCBhbmQgYm91bmQgdG8gU0EgdGhyb3VnaCBhIHJvbGUgYmluZGluZwojIyBpbiB0aGUgZ2l2ZW4gbmFtZXNwYWNlLiBQcm9tZXRoZXVzICptdXN0KiBiZSB0b2xkIHRoYXQgaXRzIFNECiMjIGlzIG5hbWVzcGFjZWQgYnkgbWVhbnMgb2YgJ3NjcmFwZV9jb25maWdzLmt1YmVybmV0ZXNfc2RfY29uZmlncy5uYW1lc3BhY2VzJy4Kc2VydmVyOgogIGF1dG9tb3VudFNlcnZpY2VBY2NvdW50VG9rZW46IHRydWUKICBuYW1lc3BhY2VzOiBbXQogIHJlbGVhc2VOYW1lc3BhY2U6IHRydWUKICB1c2VFeGlzdGluZ0NsdXN0ZXJSb2xlTmFtZTogInByb21ldGhldXMtY2x1c3Rlci1yb2xlIgoKICBwZXJzaXN0ZW50Vm9sdW1lOgogICAgZW5hYmxlZDogZmFsc2UKCmFsZXJ0bWFuYWdlcjoKICBlbmFibGVkOiBmYWxzZQoKa3ViZS1zdGF0ZS1tZXRyaWNzOgogIGVuYWJsZWQ6IHRydWUKCnByb21ldGhldXMtbm9kZS1leHBvcnRlcjoKICBlbmFibGVkOiBmYWxzZQoKcHJvbWV0aGV1cy1wdXNoZ2F0ZXdheToKICBlbmFibGVkOiBmYWxzZQoKc2VydmVyRmlsZXM6CiAgcHJvbWV0aGV1cy55bWw6CiAgICBzY3JhcGVfY29uZmlnczoKICAgICAgLSBqb2JfbmFtZTogInByb21ldGhldXMiCiAgICAgICAgc3RhdGljX2NvbmZpZ3M6CiAgICAgICAgICAtIHRhcmdldHM6CiAgICAgICAgICAgIC0gbG9jYWxob3N0OjkwOTAKICAgICAgLSBqb2JfbmFtZTogImt1YmVybmV0ZXMtc2VydmljZS1lbmRwb2ludHMiCiAgICAgICAgaG9ub3JfbGFiZWxzOiB0cnVlCiAgICAgICAga3ViZXJuZXRlc19zZF9jb25maWdzOgogICAgICAgICAgLSByb2xlOiBlbmRwb2ludHMKICAgICAgICAgICAgbmFtZXNwYWNlczoKICAgICAgICAgICAgICBvd25fbmFtZXNwYWNlOiB0cnVlCiAgICAgICAgcmVsYWJlbF9jb25maWdzOgogICAgICAgICAgLSBzb3VyY2VfbGFiZWxzOiBbX19tZXRhX2t1YmVybmV0ZXNfc2VydmljZV9hbm5vdGF0aW9uX3Byb21ldGhldXNfaW9fc2NyYXBlXQogICAgICAgICAgICBhY3Rpb246IGtlZXAKICAgICAgICAgICAgcmVnZXg6IHRydWUKICAgICAgICAgIC0gc291cmNlX2xhYmVsczogW19fbWV0YV9rdWJlcm5ldGVzX3NlcnZpY2VfYW5ub3RhdGlvbl9wcm9tZXRoZXVzX2lvX3NjaGVtZV0KICAgICAgICAgICAgYWN0aW9uOiByZXBsYWNlCiAgICAgICAgICAgIHRhcmdldF9sYWJlbDogX19zY2hlbWVfXwogICAgICAgICAgICByZWdleDogKGh0dHBzPykKICAgICAgICAgIC0gc291cmNlX2xhYmVsczogW19fbWV0YV9rdWJlcm5ldGVzX3NlcnZpY2VfYW5ub3RhdGlvbl9wcm9tZXRoZXVzX2lvX3BhdGhdCiAgICAgICAgICAgIGFjdGlvbjogcmVwbGFjZQogICAgICAgICAgICB0YXJnZXRfbGFiZWw6IF9fbWV0cmljc19wYXRoX18KICAgICAgICAgICAgcmVnZXg6ICguKykKICAgICAgICAgIC0gc291cmNlX2xhYmVsczoKICAgICAgICAgICAgLSBfX2FkZHJlc3NfXwogICAgICAgICAgICAtIF9fbWV0YV9rdWJlcm5ldGVzX3NlcnZpY2VfYW5ub3RhdGlvbl9wcm9tZXRoZXVzX2lvX3BvcnQKICAgICAgICAgICAgYWN0aW9uOiByZXBsYWNlCiAgICAgICAgICAgIHRhcmdldF9sYWJlbDogX19hZGRyZXNzX18KICAgICAgICAgICAgcmVnZXg6ICguKz8pKD86OlxkKyk/OyhcZCspCiAgICAgICAgICAgIHJlcGxhY2VtZW50OiAkMTokMgogICAgICAgICAgLSBhY3Rpb246IGxhYmVsbWFwCiAgICAgICAgICAgIHJlZ2V4OiBfX21ldGFfa3ViZXJuZXRlc19zZXJ2aWNlX2xhYmVsXyguKykKICAgICAgICAgIC0gc291cmNlX2xhYmVsczogW19fbWV0YV9rdWJlcm5ldGVzX25hbWVzcGFjZV0KICAgICAgICAgICAgYWN0aW9uOiByZXBsYWNlCiAgICAgICAgICAgIHRhcmdldF9sYWJlbDogbmFtZXNwYWNlCiAgICAgICAgICAtIHNvdXJjZV9sYWJlbHM6IFtfX21ldGFfa3ViZXJuZXRlc19zZXJ2aWNlX25hbWVdCiAgICAgICAgICAgIGFjdGlvbjogcmVwbGFjZQogICAgICAgICAgICB0YXJnZXRfbGFiZWw6IHNlcnZpY2UKICAgICAgICAgIC0gc291cmNlX2xhYmVsczogW19fbWV0YV9rdWJlcm5ldGVzX3BvZF9ub2RlX25hbWVdCiAgICAgICAgICAgIGFjdGlvbjogcmVwbGFjZQogICAgICAgICAgICB0YXJnZXRfbGFiZWw6IG5vZGUKCmV4dHJhTWFuaWZlc3RzOgogIC0gfAogICAgYXBpVmVyc2lvbjogcmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MQogICAga2luZDogQ2x1c3RlclJvbGUKICAgIG1ldGFkYXRhOgogICAgICBsYWJlbHM6CiAgICAgICAge3stIGluY2x1ZGUgInByb21ldGhldXMuc2VydmVyLmxhYmVscyIgLiB8IG5pbmRlbnQgNCB9fQogICAgICBuYW1lOiBwcm9tZXRoZXVzLWNsdXN0ZXItcm9sZQogICAgcnVsZXM6CiAgICAgIC0gYXBpR3JvdXBzOgogICAgICAgIC0gIiIKICAgICAgICByZXNvdXJjZXM6CiAgICAgICAgLSBzZXJ2aWNlcwogICAgICAgIC0gZW5kcG9pbnRzCiAgICAgICAgLSBwb2RzCiAgICAgICAgLSBpbmdyZXNzZXMKICAgICAgICAtIGNvbmZpZ21hcHMKICAgICAgICB2ZXJiczoKICAgICAgICAtIGdldAogICAgICAgIC0gbGlzdAogICAgICAgIC0gd2F0Y2gKICAgICAgLSBhcGlHcm91cHM6CiAgICAgICAgLSAiZXh0ZW5zaW9ucyIKICAgICAgICAtICJuZXR3b3JraW5nLms4cy5pbyIKICAgICAgICByZXNvdXJjZXM6CiAgICAgICAgLSBpbmdyZXNzZXMvc3RhdHVzCiAgICAgICAgLSBpbmdyZXNzZXMKICAgICAgICB2ZXJiczoKICAgICAgICAtIGdldAogICAgICAgIC0gbGlzdAogICAgICAgIC0gd2F0Y2gKICAgICAgLSBhcGlHcm91cHM6CiAgICAgICAgLSAiZGlzY292ZXJ5Lms4cy5pbyIKICAgICAgICByZXNvdXJjZXM6CiAgICAgICAgLSBlbmRwb2ludHNsaWNlcwogICAgICAgIHZlcmJzOgogICAgICAgIC0gZ2V0CiAgICAgICAgLSBsaXN0CiAgICAgICAgLSB3YXRjaAogICAgICAtIG5vblJlc291cmNlVVJMczoKICAgICAgICAtICIvbWV0cmljcyIKICAgICAgICB2ZXJiczoKICAgICAgICAtIGdldAo="},{"name":"ci/11-default-values.yaml","data":"IyMgVGVzdCBjYXNlOiB1c2UgY2hhcnQncyBkZWZhdWx0IHZhbHVlcwo="}]},"manifest":"---\n# Source: prometheus/charts/alertmanager/templates/serviceaccount.yaml\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: prometheus-alertmanager\n  labels:\n    helm.sh/chart: alertmanager-1.10.0\n    app.kubernetes.io/name: alertmanager\n    app.kubernetes.io/instance: prometheus\n    app.kubernetes.io/version: \"v0.27.0\"\n    app.kubernetes.io/managed-by: Helm\n  namespace: monitoring\nautomountServiceAccountToken: true\n---\n# Source: prometheus/charts/kube-state-metrics/templates/serviceaccount.yaml\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  labels:    \n    helm.sh/chart: kube-state-metrics-5.18.1\n    app.kubernetes.io/managed-by: Helm\n    app.kubernetes.io/component: metrics\n    app.kubernetes.io/part-of: kube-state-metrics\n    app.kubernetes.io/name: kube-state-metrics\n    app.kubernetes.io/instance: prometheus\n    app.kubernetes.io/version: \"2.12.0\"\n  name: prometheus-kube-state-metrics\n  namespace: monitoring\n---\n# Source: prometheus/charts/prometheus-node-exporter/templates/serviceaccount.yaml\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: prometheus-prometheus-node-exporter\n  namespace: monitoring\n  labels:\n    helm.sh/chart: prometheus-node-exporter-4.32.0\n    app.kubernetes.io/managed-by: Helm\n    app.kubernetes.io/component: metrics\n    app.kubernetes.io/part-of: prometheus-node-exporter\n    app.kubernetes.io/name: prometheus-node-exporter\n    app.kubernetes.io/instance: prometheus\n    app.kubernetes.io/version: \"1.7.0\"\n---\n# Source: prometheus/charts/prometheus-pushgateway/templates/serviceaccount.yaml\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  labels:\n    helm.sh/chart: prometheus-pushgateway-2.12.0\n    app.kubernetes.io/name: prometheus-pushgateway\n    app.kubernetes.io/instance: prometheus\n    app.kubernetes.io/version: \"v1.8.0\"\n    app.kubernetes.io/managed-by: Helm\n  name: prometheus-prometheus-pushgateway\n  namespace: monitoring\nautomountServiceAccountToken: true\n---\n# Source: prometheus/templates/serviceaccount.yaml\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  labels:\n    app.kubernetes.io/component: server\n    app.kubernetes.io/name: prometheus\n    app.kubernetes.io/instance: prometheus\n    app.kubernetes.io/version: v2.51.2\n    helm.sh/chart: prometheus-25.20.1\n    app.kubernetes.io/managed-by: Helm\n    app.kubernetes.io/part-of: prometheus\n  name: prometheus-server\n  namespace: monitoring\n  annotations:\n    {}\n---\n# Source: prometheus/charts/alertmanager/templates/configmap.yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: prometheus-alertmanager\n  labels:\n    helm.sh/chart: alertmanager-1.10.0\n    app.kubernetes.io/name: alertmanager\n    app.kubernetes.io/instance: prometheus\n    app.kubernetes.io/version: \"v0.27.0\"\n    app.kubernetes.io/managed-by: Helm\n  namespace: monitoring\ndata:\n  alertmanager.yml: |\n    global: {}\n    receivers:\n    - name: default-receiver\n    route:\n      group_interval: 5m\n      group_wait: 10s\n      receiver: default-receiver\n      repeat_interval: 3h\n    templates:\n    - /etc/alertmanager/*.tmpl\n---\n# Source: prometheus/templates/cm.yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  labels:\n    app.kubernetes.io/component: server\n    app.kubernetes.io/name: prometheus\n    app.kubernetes.io/instance: prometheus\n    app.kubernetes.io/version: v2.51.2\n    helm.sh/chart: prometheus-25.20.1\n    app.kubernetes.io/managed-by: Helm\n    app.kubernetes.io/part-of: prometheus\n  name: prometheus-server\n  namespace: monitoring\ndata:\n  allow-snippet-annotations: \"false\"\n  alerting_rules.yml: |\n    {}\n  alerts: |\n    {}\n  prometheus.yml: |\n    global:\n      evaluation_interval: 1m\n      scrape_interval: 1m\n      scrape_timeout: 10s\n    rule_files:\n    - /etc/config/recording_rules.yml\n    - /etc/config/alerting_rules.yml\n    - /etc/config/rules\n    - /etc/config/alerts\n    scrape_configs:\n    - job_name: prometheus\n      static_configs:\n      - targets:\n        - localhost:9090\n    - bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n      job_name: kubernetes-apiservers\n      kubernetes_sd_configs:\n      - role: endpoints\n      relabel_configs:\n      - action: keep\n        regex: default;kubernetes;https\n        source_labels:\n        - __meta_kubernetes_namespace\n        - __meta_kubernetes_service_name\n        - __meta_kubernetes_endpoint_port_name\n      scheme: https\n      tls_config:\n        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n        insecure_skip_verify: true\n    - bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n      job_name: kubernetes-nodes\n      kubernetes_sd_configs:\n      - role: node\n      relabel_configs:\n      - action: labelmap\n        regex: __meta_kubernetes_node_label_(.+)\n      - replacement: kubernetes.default.svc:443\n        target_label: __address__\n      - regex: (.+)\n        replacement: /api/v1/nodes/$1/proxy/metrics\n        source_labels:\n        - __meta_kubernetes_node_name\n        target_label: __metrics_path__\n      scheme: https\n      tls_config:\n        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n        insecure_skip_verify: true\n    - bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n      job_name: kubernetes-nodes-cadvisor\n      kubernetes_sd_configs:\n      - role: node\n      relabel_configs:\n      - action: labelmap\n        regex: __meta_kubernetes_node_label_(.+)\n      - replacement: kubernetes.default.svc:443\n        target_label: __address__\n      - regex: (.+)\n        replacement: /api/v1/nodes/$1/proxy/metrics/cadvisor\n        source_labels:\n        - __meta_kubernetes_node_name\n        target_label: __metrics_path__\n      scheme: https\n      tls_config:\n        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n        insecure_skip_verify: true\n    - honor_labels: true\n      job_name: kubernetes-service-endpoints\n      kubernetes_sd_configs:\n      - role: endpoints\n      relabel_configs:\n      - action: keep\n        regex: true\n        source_labels:\n        - __meta_kubernetes_service_annotation_prometheus_io_scrape\n      - action: drop\n        regex: true\n        source_labels:\n        - __meta_kubernetes_service_annotation_prometheus_io_scrape_slow\n      - action: replace\n        regex: (https?)\n        source_labels:\n        - __meta_kubernetes_service_annotation_prometheus_io_scheme\n        target_label: __scheme__\n      - action: replace\n        regex: (.+)\n        source_labels:\n        - __meta_kubernetes_service_annotation_prometheus_io_path\n        target_label: __metrics_path__\n      - action: replace\n        regex: (.+?)(?::\\d+)?;(\\d+)\n        replacement: $1:$2\n        source_labels:\n        - __address__\n        - __meta_kubernetes_service_annotation_prometheus_io_port\n        target_label: __address__\n      - action: labelmap\n        regex: __meta_kubernetes_service_annotation_prometheus_io_param_(.+)\n        replacement: __param_$1\n      - action: labelmap\n        regex: __meta_kubernetes_service_label_(.+)\n      - action: replace\n        source_labels:\n        - __meta_kubernetes_namespace\n        target_label: namespace\n      - action: replace\n        source_labels:\n        - __meta_kubernetes_service_name\n        target_label: service\n      - action: replace\n        source_labels:\n        - __meta_kubernetes_pod_node_name\n        target_label: node\n    - honor_labels: true\n      job_name: kubernetes-service-endpoints-slow\n      kubernetes_sd_configs:\n      - role: endpoints\n      relabel_configs:\n      - action: keep\n        regex: true\n        source_labels:\n        - __meta_kubernetes_service_annotation_prometheus_io_scrape_slow\n      - action: replace\n        regex: (https?)\n        source_labels:\n        - __meta_kubernetes_service_annotation_prometheus_io_scheme\n        target_label: __scheme__\n      - action: replace\n        regex: (.+)\n        source_labels:\n        - __meta_kubernetes_service_annotation_prometheus_io_path\n        target_label: __metrics_path__\n      - action: replace\n        regex: (.+?)(?::\\d+)?;(\\d+)\n        replacement: $1:$2\n        source_labels:\n        - __address__\n        - __meta_kubernetes_service_annotation_prometheus_io_port\n        target_label: __address__\n      - action: labelmap\n        regex: __meta_kubernetes_service_annotation_prometheus_io_param_(.+)\n        replacement: __param_$1\n      - action: labelmap\n        regex: __meta_kubernetes_service_label_(.+)\n      - action: replace\n        source_labels:\n        - __meta_kubernetes_namespace\n        target_label: namespace\n      - action: replace\n        source_labels:\n        - __meta_kubernetes_service_name\n        target_label: service\n      - action: replace\n        source_labels:\n        - __meta_kubernetes_pod_node_name\n        target_label: node\n      scrape_interval: 5m\n      scrape_timeout: 30s\n    - honor_labels: true\n      job_name: prometheus-pushgateway\n      kubernetes_sd_configs:\n      - role: service\n      relabel_configs:\n      - action: keep\n        regex: pushgateway\n        source_labels:\n        - __meta_kubernetes_service_annotation_prometheus_io_probe\n    - honor_labels: true\n      job_name: kubernetes-services\n      kubernetes_sd_configs:\n      - role: service\n      metrics_path: /probe\n      params:\n        module:\n        - http_2xx\n      relabel_configs:\n      - action: keep\n        regex: true\n        source_labels:\n        - __meta_kubernetes_service_annotation_prometheus_io_probe\n      - source_labels:\n        - __address__\n        target_label: __param_target\n      - replacement: blackbox\n        target_label: __address__\n      - source_labels:\n        - __param_target\n        target_label: instance\n      - action: labelmap\n        regex: __meta_kubernetes_service_label_(.+)\n      - source_labels:\n        - __meta_kubernetes_namespace\n        target_label: namespace\n      - source_labels:\n        - __meta_kubernetes_service_name\n        target_label: service\n    - honor_labels: true\n      job_name: kubernetes-pods\n      kubernetes_sd_configs:\n      - role: pod\n      relabel_configs:\n      - action: keep\n        regex: true\n        source_labels:\n        - __meta_kubernetes_pod_annotation_prometheus_io_scrape\n      - action: drop\n        regex: true\n        source_labels:\n        - __meta_kubernetes_pod_annotation_prometheus_io_scrape_slow\n      - action: replace\n        regex: (https?)\n        source_labels:\n        - __meta_kubernetes_pod_annotation_prometheus_io_scheme\n        target_label: __scheme__\n      - action: replace\n        regex: (.+)\n        source_labels:\n        - __meta_kubernetes_pod_annotation_prometheus_io_path\n        target_label: __metrics_path__\n      - action: replace\n        regex: (\\d+);(([A-Fa-f0-9]{1,4}::?){1,7}[A-Fa-f0-9]{1,4})\n        replacement: '[$2]:$1'\n        source_labels:\n        - __meta_kubernetes_pod_annotation_prometheus_io_port\n        - __meta_kubernetes_pod_ip\n        target_label: __address__\n      - action: replace\n        regex: (\\d+);((([0-9]+?)(\\.|$)){4})\n        replacement: $2:$1\n        source_labels:\n        - __meta_kubernetes_pod_annotation_prometheus_io_port\n        - __meta_kubernetes_pod_ip\n        target_label: __address__\n      - action: labelmap\n        regex: __meta_kubernetes_pod_annotation_prometheus_io_param_(.+)\n        replacement: __param_$1\n      - action: labelmap\n        regex: __meta_kubernetes_pod_label_(.+)\n      - action: replace\n        source_labels:\n        - __meta_kubernetes_namespace\n        target_label: namespace\n      - action: replace\n        source_labels:\n        - __meta_kubernetes_pod_name\n        target_label: pod\n      - action: drop\n        regex: Pending|Succeeded|Failed|Completed\n        source_labels:\n        - __meta_kubernetes_pod_phase\n      - action: replace\n        source_labels:\n        - __meta_kubernetes_pod_node_name\n        target_label: node\n    - honor_labels: true\n      job_name: kubernetes-pods-slow\n      kubernetes_sd_configs:\n      - role: pod\n      relabel_configs:\n      - action: keep\n        regex: true\n        source_labels:\n        - __meta_kubernetes_pod_annotation_prometheus_io_scrape_slow\n      - action: replace\n        regex: (https?)\n        source_labels:\n        - __meta_kubernetes_pod_annotation_prometheus_io_scheme\n        target_label: __scheme__\n      - action: replace\n        regex: (.+)\n        source_labels:\n        - __meta_kubernetes_pod_annotation_prometheus_io_path\n        target_label: __metrics_path__\n      - action: replace\n        regex: (\\d+);(([A-Fa-f0-9]{1,4}::?){1,7}[A-Fa-f0-9]{1,4})\n        replacement: '[$2]:$1'\n        source_labels:\n        - __meta_kubernetes_pod_annotation_prometheus_io_port\n        - __meta_kubernetes_pod_ip\n        target_label: __address__\n      - action: replace\n        regex: (\\d+);((([0-9]+?)(\\.|$)){4})\n        replacement: $2:$1\n        source_labels:\n        - __meta_kubernetes_pod_annotation_prometheus_io_port\n        - __meta_kubernetes_pod_ip\n        target_label: __address__\n      - action: labelmap\n        regex: __meta_kubernetes_pod_annotation_prometheus_io_param_(.+)\n        replacement: __param_$1\n      - action: labelmap\n        regex: __meta_kubernetes_pod_label_(.+)\n      - action: replace\n        source_labels:\n        - __meta_kubernetes_namespace\n        target_label: namespace\n      - action: replace\n        source_labels:\n        - __meta_kubernetes_pod_name\n        target_label: pod\n      - action: drop\n        regex: Pending|Succeeded|Failed|Completed\n        source_labels:\n        - __meta_kubernetes_pod_phase\n      - action: replace\n        source_labels:\n        - __meta_kubernetes_pod_node_name\n        target_label: node\n      scrape_interval: 5m\n      scrape_timeout: 30s\n    alerting:\n      alertmanagers:\n      - kubernetes_sd_configs:\n          - role: pod\n        tls_config:\n          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n        relabel_configs:\n        - source_labels: [__meta_kubernetes_namespace]\n          regex: monitoring\n          action: keep\n        - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_instance]\n          regex: prometheus\n          action: keep\n        - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]\n          regex: alertmanager\n          action: keep\n        - source_labels: [__meta_kubernetes_pod_container_port_number]\n          regex: \"9093\"\n          action: keep\n  recording_rules.yml: |\n    {}\n  rules: |\n    {}\n---\n# Source: prometheus/templates/pvc.yaml\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  labels:\n    app.kubernetes.io/component: server\n    app.kubernetes.io/name: prometheus\n    app.kubernetes.io/instance: prometheus\n    app.kubernetes.io/version: v2.51.2\n    helm.sh/chart: prometheus-25.20.1\n    app.kubernetes.io/managed-by: Helm\n    app.kubernetes.io/part-of: prometheus\n  name: prometheus-server\n  namespace: monitoring\nspec:\n  accessModes:\n    - ReadWriteOnce\n  resources:\n    requests:\n      storage: \"8Gi\"\n---\n# Source: prometheus/charts/kube-state-metrics/templates/role.yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  labels:    \n    helm.sh/chart: kube-state-metrics-5.18.1\n    app.kubernetes.io/managed-by: Helm\n    app.kubernetes.io/component: metrics\n    app.kubernetes.io/part-of: kube-state-metrics\n    app.kubernetes.io/name: kube-state-metrics\n    app.kubernetes.io/instance: prometheus\n    app.kubernetes.io/version: \"2.12.0\"\n  name: prometheus-kube-state-metrics\nrules:\n\n- apiGroups: [\"certificates.k8s.io\"]\n  resources:\n  - certificatesigningrequests\n  verbs: [\"list\", \"watch\"]\n\n- apiGroups: [\"\"]\n  resources:\n  - configmaps\n  verbs: [\"list\", \"watch\"]\n\n- apiGroups: [\"batch\"]\n  resources:\n  - cronjobs\n  verbs: [\"list\", \"watch\"]\n\n- apiGroups: [\"extensions\", \"apps\"]\n  resources:\n  - daemonsets\n  verbs: [\"list\", \"watch\"]\n\n- apiGroups: [\"extensions\", \"apps\"]\n  resources:\n  - deployments\n  verbs: [\"list\", \"watch\"]\n\n- apiGroups: [\"\"]\n  resources:\n  - endpoints\n  verbs: [\"list\", \"watch\"]\n\n- apiGroups: [\"autoscaling\"]\n  resources:\n  - horizontalpodautoscalers\n  verbs: [\"list\", \"watch\"]\n\n- apiGroups: [\"extensions\", \"networking.k8s.io\"]\n  resources:\n  - ingresses\n  verbs: [\"list\", \"watch\"]\n\n- apiGroups: [\"batch\"]\n  resources:\n  - jobs\n  verbs: [\"list\", \"watch\"]\n\n- apiGroups: [\"coordination.k8s.io\"]\n  resources:\n  - leases\n  verbs: [\"list\", \"watch\"]\n\n- apiGroups: [\"\"]\n  resources:\n  - limitranges\n  verbs: [\"list\", \"watch\"]\n\n- apiGroups: [\"admissionregistration.k8s.io\"]\n  resources:\n    - mutatingwebhookconfigurations\n  verbs: [\"list\", \"watch\"]\n\n- apiGroups: [\"\"]\n  resources:\n  - namespaces\n  verbs: [\"list\", \"watch\"]\n\n- apiGroups: [\"networking.k8s.io\"]\n  resources:\n  - networkpolicies\n  verbs: [\"list\", \"watch\"]\n\n- apiGroups: [\"\"]\n  resources:\n  - nodes\n  verbs: [\"list\", \"watch\"]\n\n- apiGroups: [\"\"]\n  resources:\n  - persistentvolumeclaims\n  verbs: [\"list\", \"watch\"]\n\n- apiGroups: [\"\"]\n  resources:\n  - persistentvolumes\n  verbs: [\"list\", \"watch\"]\n\n- apiGroups: [\"policy\"]\n  resources:\n    - poddisruptionbudgets\n  verbs: [\"list\", \"watch\"]\n\n- apiGroups: [\"\"]\n  resources:\n  - pods\n  verbs: [\"list\", \"watch\"]\n\n- apiGroups: [\"extensions\", \"apps\"]\n  resources:\n  - replicasets\n  verbs: [\"list\", \"watch\"]\n\n- apiGroups: [\"\"]\n  resources:\n  - replicationcontrollers\n  verbs: [\"list\", \"watch\"]\n\n- apiGroups: [\"\"]\n  resources:\n  - resourcequotas\n  verbs: [\"list\", \"watch\"]\n\n- apiGroups: [\"\"]\n  resources:\n  - secrets\n  verbs: [\"list\", \"watch\"]\n\n- apiGroups: [\"\"]\n  resources:\n  - services\n  verbs: [\"list\", \"watch\"]\n\n- apiGroups: [\"apps\"]\n  resources:\n  - statefulsets\n  verbs: [\"list\", \"watch\"]\n\n- apiGroups: [\"storage.k8s.io\"]\n  resources:\n    - storageclasses\n  verbs: [\"list\", \"watch\"]\n\n- apiGroups: [\"admissionregistration.k8s.io\"]\n  resources:\n    - validatingwebhookconfigurations\n  verbs: [\"list\", \"watch\"]\n\n- apiGroups: [\"storage.k8s.io\"]\n  resources:\n    - volumeattachments\n  verbs: [\"list\", \"watch\"]\n---\n# Source: prometheus/templates/clusterrole.yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  labels:\n    app.kubernetes.io/component: server\n    app.kubernetes.io/name: prometheus\n    app.kubernetes.io/instance: prometheus\n    app.kubernetes.io/version: v2.51.2\n    helm.sh/chart: prometheus-25.20.1\n    app.kubernetes.io/managed-by: Helm\n    app.kubernetes.io/part-of: prometheus\n  name: prometheus-server\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\n      - nodes/proxy\n      - nodes/metrics\n      - services\n      - endpoints\n      - pods\n      - ingresses\n      - configmaps\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups:\n      - \"extensions\"\n      - \"networking.k8s.io\"\n    resources:\n      - ingresses/status\n      - ingresses\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups:\n      - \"discovery.k8s.io\"\n    resources:\n      - endpointslices\n    verbs:\n      - get\n      - list\n      - watch\n  - nonResourceURLs:\n      - \"/metrics\"\n    verbs:\n      - get\n---\n# Source: prometheus/charts/kube-state-metrics/templates/clusterrolebinding.yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  labels:    \n    helm.sh/chart: kube-state-metrics-5.18.1\n    app.kubernetes.io/managed-by: Helm\n    app.kubernetes.io/component: metrics\n    app.kubernetes.io/part-of: kube-state-metrics\n    app.kubernetes.io/name: kube-state-metrics\n    app.kubernetes.io/instance: prometheus\n    app.kubernetes.io/version: \"2.12.0\"\n  name: prometheus-kube-state-metrics\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: prometheus-kube-state-metrics\nsubjects:\n- kind: ServiceAccount\n  name: prometheus-kube-state-metrics\n  namespace: monitoring\n---\n# Source: prometheus/templates/clusterrolebinding.yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  labels:\n    app.kubernetes.io/component: server\n    app.kubernetes.io/name: prometheus\n    app.kubernetes.io/instance: prometheus\n    app.kubernetes.io/version: v2.51.2\n    helm.sh/chart: prometheus-25.20.1\n    app.kubernetes.io/managed-by: Helm\n    app.kubernetes.io/part-of: prometheus\n  name: prometheus-server\nsubjects:\n  - kind: ServiceAccount\n    name: prometheus-server\n    namespace: monitoring\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: prometheus-server\n---\n# Source: prometheus/charts/alertmanager/templates/services.yaml\napiVersion: v1\nkind: Service\nmetadata:\n  name: prometheus-alertmanager\n  labels:\n    helm.sh/chart: alertmanager-1.10.0\n    app.kubernetes.io/name: alertmanager\n    app.kubernetes.io/instance: prometheus\n    app.kubernetes.io/version: \"v0.27.0\"\n    app.kubernetes.io/managed-by: Helm\n  namespace: monitoring\nspec:\n  type: ClusterIP\n  ports:\n    - port: 9093\n      targetPort: http\n      protocol: TCP\n      name: http\n  selector:\n    app.kubernetes.io/name: alertmanager\n    app.kubernetes.io/instance: prometheus\n---\n# Source: prometheus/charts/alertmanager/templates/services.yaml\napiVersion: v1\nkind: Service\nmetadata:\n  name: prometheus-alertmanager-headless\n  labels:\n    helm.sh/chart: alertmanager-1.10.0\n    app.kubernetes.io/name: alertmanager\n    app.kubernetes.io/instance: prometheus\n    app.kubernetes.io/version: \"v0.27.0\"\n    app.kubernetes.io/managed-by: Helm\n  namespace: monitoring\nspec:\n  clusterIP: None\n  ports:\n    - port: 9093\n      targetPort: http\n      protocol: TCP\n      name: http\n  selector:\n    app.kubernetes.io/name: alertmanager\n    app.kubernetes.io/instance: prometheus\n---\n# Source: prometheus/charts/kube-state-metrics/templates/service.yaml\napiVersion: v1\nkind: Service\nmetadata:\n  name: prometheus-kube-state-metrics\n  namespace: monitoring\n  labels:    \n    helm.sh/chart: kube-state-metrics-5.18.1\n    app.kubernetes.io/managed-by: Helm\n    app.kubernetes.io/component: metrics\n    app.kubernetes.io/part-of: kube-state-metrics\n    app.kubernetes.io/name: kube-state-metrics\n    app.kubernetes.io/instance: prometheus\n    app.kubernetes.io/version: \"2.12.0\"\n  annotations:\n    prometheus.io/scrape: 'true'\nspec:\n  type: \"ClusterIP\"\n  ports:\n  - name: \"http\"\n    protocol: TCP\n    port: 8080\n    targetPort: 8080\n  \n  selector:    \n    app.kubernetes.io/name: kube-state-metrics\n    app.kubernetes.io/instance: prometheus\n---\n# Source: prometheus/charts/prometheus-node-exporter/templates/service.yaml\napiVersion: v1\nkind: Service\nmetadata:\n  name: prometheus-prometheus-node-exporter\n  namespace: monitoring\n  labels:\n    helm.sh/chart: prometheus-node-exporter-4.32.0\n    app.kubernetes.io/managed-by: Helm\n    app.kubernetes.io/component: metrics\n    app.kubernetes.io/part-of: prometheus-node-exporter\n    app.kubernetes.io/name: prometheus-node-exporter\n    app.kubernetes.io/instance: prometheus\n    app.kubernetes.io/version: \"1.7.0\"\n  annotations:\n    prometheus.io/scrape: \"true\"\nspec:\n  type: ClusterIP\n  ports:\n    - port: 9100\n      targetPort: 9100\n      protocol: TCP\n      name: metrics\n  selector:\n    app.kubernetes.io/name: prometheus-node-exporter\n    app.kubernetes.io/instance: prometheus\n---\n# Source: prometheus/charts/prometheus-pushgateway/templates/service.yaml\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    prometheus.io/probe: pushgateway\n  labels:\n    helm.sh/chart: prometheus-pushgateway-2.12.0\n    app.kubernetes.io/name: prometheus-pushgateway\n    app.kubernetes.io/instance: prometheus\n    app.kubernetes.io/version: \"v1.8.0\"\n    app.kubernetes.io/managed-by: Helm\n  name: prometheus-prometheus-pushgateway\n  namespace: monitoring\nspec:\n  type: ClusterIP\n  ports:\n    - port: 9091\n      targetPort: 9091\n      protocol: TCP\n      name: http\n  selector:\n    app.kubernetes.io/name: prometheus-pushgateway\n    app.kubernetes.io/instance: prometheus\n---\n# Source: prometheus/templates/service.yaml\napiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    app.kubernetes.io/component: server\n    app.kubernetes.io/name: prometheus\n    app.kubernetes.io/instance: prometheus\n    app.kubernetes.io/version: v2.51.2\n    helm.sh/chart: prometheus-25.20.1\n    app.kubernetes.io/managed-by: Helm\n    app.kubernetes.io/part-of: prometheus\n  name: prometheus-server\n  namespace: monitoring\nspec:\n  ports:\n    - name: http\n      port: 80\n      protocol: TCP\n      targetPort: 9090\n  selector:\n    app.kubernetes.io/component: server\n    app.kubernetes.io/name: prometheus\n    app.kubernetes.io/instance: prometheus\n  sessionAffinity: None\n  type: \"ClusterIP\"\n---\n# Source: prometheus/charts/prometheus-node-exporter/templates/daemonset.yaml\napiVersion: apps/v1\nkind: DaemonSet\nmetadata:\n  name: prometheus-prometheus-node-exporter\n  namespace: monitoring\n  labels:\n    helm.sh/chart: prometheus-node-exporter-4.32.0\n    app.kubernetes.io/managed-by: Helm\n    app.kubernetes.io/component: metrics\n    app.kubernetes.io/part-of: prometheus-node-exporter\n    app.kubernetes.io/name: prometheus-node-exporter\n    app.kubernetes.io/instance: prometheus\n    app.kubernetes.io/version: \"1.7.0\"\nspec:\n  selector:\n    matchLabels:\n      app.kubernetes.io/name: prometheus-node-exporter\n      app.kubernetes.io/instance: prometheus\n  revisionHistoryLimit: 10\n  updateStrategy:\n    rollingUpdate:\n      maxUnavailable: 1\n    type: RollingUpdate\n  template:\n    metadata:\n      annotations:\n        cluster-autoscaler.kubernetes.io/safe-to-evict: \"true\"\n      labels:\n        helm.sh/chart: prometheus-node-exporter-4.32.0\n        app.kubernetes.io/managed-by: Helm\n        app.kubernetes.io/component: metrics\n        app.kubernetes.io/part-of: prometheus-node-exporter\n        app.kubernetes.io/name: prometheus-node-exporter\n        app.kubernetes.io/instance: prometheus\n        app.kubernetes.io/version: \"1.7.0\"\n    spec:\n      automountServiceAccountToken: false\n      securityContext:\n        fsGroup: 65534\n        runAsGroup: 65534\n        runAsNonRoot: true\n        runAsUser: 65534\n      serviceAccountName: prometheus-prometheus-node-exporter\n      containers:\n        - name: node-exporter\n          image: quay.io/prometheus/node-exporter:v1.7.0\n          imagePullPolicy: IfNotPresent\n          args:\n            - --path.procfs=/host/proc\n            - --path.sysfs=/host/sys\n            - --path.rootfs=/host/root\n            - --path.udev.data=/host/root/run/udev/data\n            - --web.listen-address=[$(HOST_IP)]:9100\n          securityContext:\n            allowPrivilegeEscalation: false\n            readOnlyRootFilesystem: true\n          env:\n            - name: HOST_IP\n              value: 0.0.0.0\n          ports:\n            - name: metrics\n              containerPort: 9100\n              protocol: TCP\n          livenessProbe:\n            failureThreshold: 3\n            httpGet:\n              httpHeaders:\n              path: /\n              port: 9100\n              scheme: HTTP\n            initialDelaySeconds: 0\n            periodSeconds: 10\n            successThreshold: 1\n            timeoutSeconds: 1\n          readinessProbe:\n            failureThreshold: 3\n            httpGet:\n              httpHeaders:\n              path: /\n              port: 9100\n              scheme: HTTP\n            initialDelaySeconds: 0\n            periodSeconds: 10\n            successThreshold: 1\n            timeoutSeconds: 1\n          volumeMounts:\n            - name: proc\n              mountPath: /host/proc\n              readOnly:  true\n            - name: sys\n              mountPath: /host/sys\n              readOnly: true\n            - name: root\n              mountPath: /host/root\n              mountPropagation: HostToContainer\n              readOnly: true\n      hostNetwork: true\n      hostPID: true\n      nodeSelector:\n        kubernetes.io/os: linux\n      tolerations:\n        - effect: NoSchedule\n          operator: Exists\n      volumes:\n        - name: proc\n          hostPath:\n            path: /proc\n        - name: sys\n          hostPath:\n            path: /sys\n        - name: root\n          hostPath:\n            path: /\n---\n# Source: prometheus/charts/kube-state-metrics/templates/deployment.yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: prometheus-kube-state-metrics\n  namespace: monitoring\n  labels:    \n    helm.sh/chart: kube-state-metrics-5.18.1\n    app.kubernetes.io/managed-by: Helm\n    app.kubernetes.io/component: metrics\n    app.kubernetes.io/part-of: kube-state-metrics\n    app.kubernetes.io/name: kube-state-metrics\n    app.kubernetes.io/instance: prometheus\n    app.kubernetes.io/version: \"2.12.0\"\nspec:\n  selector:\n    matchLabels:      \n      app.kubernetes.io/name: kube-state-metrics\n      app.kubernetes.io/instance: prometheus\n  replicas: 1\n  strategy:\n    type: RollingUpdate\n  revisionHistoryLimit: 10\n  template:\n    metadata:\n      labels:        \n        helm.sh/chart: kube-state-metrics-5.18.1\n        app.kubernetes.io/managed-by: Helm\n        app.kubernetes.io/component: metrics\n        app.kubernetes.io/part-of: kube-state-metrics\n        app.kubernetes.io/name: kube-state-metrics\n        app.kubernetes.io/instance: prometheus\n        app.kubernetes.io/version: \"2.12.0\"\n    spec:\n      hostNetwork: false\n      serviceAccountName: prometheus-kube-state-metrics\n      securityContext:\n        fsGroup: 65534\n        runAsGroup: 65534\n        runAsNonRoot: true\n        runAsUser: 65534\n        seccompProfile:\n          type: RuntimeDefault\n      containers:\n      - name: kube-state-metrics\n        args:\n        - --port=8080\n        - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments\n        imagePullPolicy: IfNotPresent\n        image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.12.0\n        ports:\n        - containerPort: 8080\n          name: \"http\"\n        livenessProbe:\n          failureThreshold: 3\n          httpGet:\n            httpHeaders:\n            path: /healthz\n            port: 8080\n            scheme: HTTP\n          initialDelaySeconds: 5\n          periodSeconds: 10\n          successThreshold: 1\n          timeoutSeconds: 5\n        readinessProbe:\n          failureThreshold: 3\n          httpGet:\n            httpHeaders:\n            path: /\n            port: 8080\n            scheme: HTTP\n          initialDelaySeconds: 5\n          periodSeconds: 10\n          successThreshold: 1\n          timeoutSeconds: 5\n        securityContext:\n          allowPrivilegeEscalation: false\n          capabilities:\n            drop:\n            - ALL\n          readOnlyRootFilesystem: true\n---\n# Source: prometheus/charts/prometheus-pushgateway/templates/deployment.yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    helm.sh/chart: prometheus-pushgateway-2.12.0\n    app.kubernetes.io/name: prometheus-pushgateway\n    app.kubernetes.io/instance: prometheus\n    app.kubernetes.io/version: \"v1.8.0\"\n    app.kubernetes.io/managed-by: Helm\n  name: prometheus-prometheus-pushgateway\n  namespace: monitoring\nspec:\n  replicas: 1\n  strategy:\n    type: Recreate\n  selector:\n    matchLabels:\n      app.kubernetes.io/name: prometheus-pushgateway\n      app.kubernetes.io/instance: prometheus\n  template:\n    metadata:\n      labels:\n        helm.sh/chart: prometheus-pushgateway-2.12.0\n        app.kubernetes.io/name: prometheus-pushgateway\n        app.kubernetes.io/instance: prometheus\n        app.kubernetes.io/version: \"v1.8.0\"\n        app.kubernetes.io/managed-by: Helm\n    spec:\n      serviceAccountName: prometheus-prometheus-pushgateway\n      automountServiceAccountToken: true\n      containers:\n        - name: pushgateway\n          image: \"quay.io/prometheus/pushgateway:v1.8.0\"\n          imagePullPolicy: IfNotPresent\n          ports:\n            - name: metrics\n              containerPort: 9091\n              protocol: TCP\n          livenessProbe:\n            httpGet:\n              path: /-/healthy\n              port: 9091\n            initialDelaySeconds: 10\n            timeoutSeconds: 10\n          readinessProbe:\n            httpGet:\n              path: /-/ready\n              port: 9091\n            initialDelaySeconds: 10\n            timeoutSeconds: 10\n          volumeMounts:\n            - name: storage-volume\n              mountPath: \"/data\"\n              subPath: \"\"\n      securityContext:\n        fsGroup: 65534\n        runAsNonRoot: true\n        runAsUser: 65534\n      volumes:\n        - name: storage-volume\n          emptyDir: {}\n---\n# Source: prometheus/templates/deploy.yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app.kubernetes.io/component: server\n    app.kubernetes.io/name: prometheus\n    app.kubernetes.io/instance: prometheus\n    app.kubernetes.io/version: v2.51.2\n    helm.sh/chart: prometheus-25.20.1\n    app.kubernetes.io/managed-by: Helm\n    app.kubernetes.io/part-of: prometheus\n  name: prometheus-server\n  namespace: monitoring\nspec:\n  selector:\n    matchLabels:\n      app.kubernetes.io/component: server\n      app.kubernetes.io/name: prometheus\n      app.kubernetes.io/instance: prometheus\n  replicas: 1\n  revisionHistoryLimit: 10\n  strategy:\n    type: Recreate\n    rollingUpdate: null\n  template:\n    metadata:\n      labels:\n        app.kubernetes.io/component: server\n        app.kubernetes.io/name: prometheus\n        app.kubernetes.io/instance: prometheus\n        app.kubernetes.io/version: v2.51.2\n        helm.sh/chart: prometheus-25.20.1\n        app.kubernetes.io/managed-by: Helm\n        app.kubernetes.io/part-of: prometheus\n    spec:\n      enableServiceLinks: true\n      serviceAccountName: prometheus-server\n      containers:\n        - name: prometheus-server-configmap-reload\n          image: \"quay.io/prometheus-operator/prometheus-config-reloader:v0.72.0\"\n          imagePullPolicy: \"IfNotPresent\"\n          args:\n            - --watched-dir=/etc/config\n            - --reload-url=http://127.0.0.1:9090/-/reload\n          volumeMounts:\n            - name: config-volume\n              mountPath: /etc/config\n              readOnly: true\n\n        - name: prometheus-server\n          image: \"quay.io/prometheus/prometheus:v2.51.2\"\n          imagePullPolicy: \"IfNotPresent\"\n          args:\n            - --storage.tsdb.retention.time=15d\n            - --config.file=/etc/config/prometheus.yml\n            - --storage.tsdb.path=/data\n            - --web.console.libraries=/etc/prometheus/console_libraries\n            - --web.console.templates=/etc/prometheus/consoles\n            - --web.enable-lifecycle\n          ports:\n            - containerPort: 9090\n          readinessProbe:\n            httpGet:\n              path: /-/ready\n              port: 9090\n              scheme: HTTP\n            initialDelaySeconds: 30\n            periodSeconds: 5\n            timeoutSeconds: 4\n            failureThreshold: 3\n            successThreshold: 1\n          livenessProbe:\n            httpGet:\n              path: /-/healthy\n              port: 9090\n              scheme: HTTP\n            initialDelaySeconds: 30\n            periodSeconds: 15\n            timeoutSeconds: 10\n            failureThreshold: 3\n            successThreshold: 1\n          volumeMounts:\n            - name: config-volume\n              mountPath: /etc/config\n            - name: storage-volume\n              mountPath: /data\n              subPath: \"\"\n      dnsPolicy: ClusterFirst\n      securityContext:\n        fsGroup: 65534\n        runAsGroup: 65534\n        runAsNonRoot: true\n        runAsUser: 65534\n      terminationGracePeriodSeconds: 300\n      volumes:\n        - name: config-volume\n          configMap:\n            name: prometheus-server\n        - name: storage-volume\n          persistentVolumeClaim:\n            claimName: prometheus-server\n---\n# Source: prometheus/charts/alertmanager/templates/statefulset.yaml\napiVersion: apps/v1\nkind: StatefulSet\nmetadata:\n  name: prometheus-alertmanager\n  labels:\n    helm.sh/chart: alertmanager-1.10.0\n    app.kubernetes.io/name: alertmanager\n    app.kubernetes.io/instance: prometheus\n    app.kubernetes.io/version: \"v0.27.0\"\n    app.kubernetes.io/managed-by: Helm\n  namespace: monitoring\nspec:\n  replicas: 1\n  minReadySeconds: 0\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app.kubernetes.io/name: alertmanager\n      app.kubernetes.io/instance: prometheus\n  serviceName: prometheus-alertmanager-headless\n  template:\n    metadata:\n      labels:\n        app.kubernetes.io/name: alertmanager\n        app.kubernetes.io/instance: prometheus\n      annotations:\n        checksum/config: aa8bb743772fc1eed967a0c3c665df9f112583b5bef49d11e980b881bc7505cb\n    spec:\n      automountServiceAccountToken: true\n      serviceAccountName: prometheus-alertmanager\n      securityContext:\n        fsGroup: 65534\n        runAsGroup: 65534\n        runAsNonRoot: true\n        runAsUser: 65534\n      containers:\n        - name: alertmanager\n          securityContext:\n            runAsGroup: 65534\n            runAsNonRoot: true\n            runAsUser: 65534\n          image: \"quay.io/prometheus/alertmanager:v0.27.0\"\n          imagePullPolicy: IfNotPresent\n          env:\n            - name: POD_IP\n              valueFrom:\n                fieldRef:\n                  apiVersion: v1\n                  fieldPath: status.podIP\n          args:\n            - --storage.path=/alertmanager\n            - --config.file=/etc/alertmanager/alertmanager.yml\n          ports:\n            - name: http\n              containerPort: 9093\n              protocol: TCP\n          livenessProbe:\n            httpGet:\n              path: /\n              port: http\n          readinessProbe:\n            httpGet:\n              path: /\n              port: http\n          resources:\n            {}\n          volumeMounts:\n            - name: config\n              mountPath: /etc/alertmanager\n            - name: storage\n              mountPath: /alertmanager\n      volumes:\n        - name: config\n          configMap:\n            name: prometheus-alertmanager\n  volumeClaimTemplates:\n    - metadata:\n        name: storage\n      spec:\n        accessModes:\n          - ReadWriteOnce\n        resources:\n          requests:\n            storage: 2Gi\n","version":1,"namespace":"monitoring"}